<template>
  <div>
    <dialog-box v-model="show">
      <div class="detail-info">
        <template>
          <div class="left" v-if="showsys">
            <ul>
              <li
                v-for="item in systypes"
                :key="item.key"
                :class="{ active: sysvalue === item.value }"
                @click="onSystypeClick(item)"
              >
                {{ item.text }}
              </li>
            </ul>
          </div>
          <div class="right">
            <!-- <div class="header">
              <div class="left">
                <a-input v-model="search.searchkey" />
              </div>
              <div class="right">
                <a-button @click="onSearch">搜索</a-button>
                <a-button @click="onReset">重置</a-button>
              </div>
            </div> -->
            <ul class="list" ref="list">
              <li v-for="item in dataList" :key="item._id">
                <a-tooltip placement="top" :mouseEnterDelay="0.5">
                  <template slot="title">
                    <span>{{item.name}}</span>
                  </template>
                <span>{{item.name}}</span>
                </a-tooltip>
              </li>
            </ul>
            <div class="pagination">
              <div class="prev">
                <img src="../../../assets/img/screen/page-prev.png" @click="changePage('prev')">
              </div>
              <div>
                <span class="current">{{this.pagination.pagenum}}</span>
                <span>/</span>
                <span>{{this.pagination.pagetotal}}</span>
              </div>
              <div class="next">
                <img src="../../../assets/img/screen/page-next.png" @click="changePage('next')">
              </div>
            </div>
          </div>
        </template>
      </div>
    </dialog-box>
  </div>
</template>
<script>
import { Button, Input, Tooltip } from "ant-design-vue";
import DialogBox from "./DialogBox";
import { query } from "@/person/api/integratedquery";
import { showError } from "@/framework/utils/index";
export default {
  props: {
    showsys: {
      type: Boolean,
      default: true,
    },
    showOrgs: Boolean,
    query: {
      type: Object,
      default: ()=>{
        return {};
      }
    },
  },
  components: {
    DialogBox,
    AInput: Input,
    AButton: Button,
    ATooltip: Tooltip
  },
  data() {
    return {
      show: false,
      params: this.query,
      sysvalue: undefined,
      dataList: [],
      pagination: {
        needTotal: true,
        pagenum: 1,
        pagesize: 20,
        total: 0,
        pagetotal:0,
      }
    };
  },
  watch: {
    showOrgs(value) {
      if(value) {
      }
      this.show = value;
    },
    show(show) {
      if (!show) {
        this.$emit("update:showOrgs", show);
      }
    },
    params: {
      deep: true,
      handler(val) {
        if(val) {
          this.sysvalue = val.filter.criteria[0].value;
          this.loadData();
        }
      }
    },
  },
  computed: {
    systypes() {
      let arr = this.$store.getters.dict("usermanage.org.systype") || [];
      return [{ key: "", value: null, text: "全部" }, ...arr];
    },
  },
  mounted() {
    this.dataList = [];
    this.show = false;

    // this.$refs.list.addEventListener('scroll',this.handleScroll);
  },
  methods: {
    handleScroll() {
      console.log('s')
    },
    onSystypeClick(item) {
      this.pagination = {
        needTotal: true,
        pagenum: 1,
        pagesize: 20,
        total: 0,
        pagetotal:0,
      };
      this.params.filter.criteria[0].value = item.value;
      this.dataList = [];
      this.loadData();
    },
    changePage(type) {
      if(type=='prev'&&this.pagination.pagenum>1) {
        this.pagination.pagenum--;
      }else if(type=='next'&&this.pagination.pagenum<this.pagination.pagetotal) {
        this.pagination.pagenum++;
      }
      this.loadData();
    },
    loadData() {
      query({...this.params,...this.pagination}).then(({result})=>{
        this.dataList = result.rows;
        this.pagination.pagenum = result.pagenum;
        this.pagination.pagesize = result.pagesize;
        this.pagination.total = result.total;
        this.pagination.pagetotal = Math.ceil(this.pagination.total/this.pagination.pagesize);
      }).catch((err)=>{
        showError(err);
      })
    }
  },
};
</script>
<style lang="less" scoped>
.detail-info{
  height: 600px;
  display: flex;
  overflow: hidden;
  padding: 50px 50px;
  font-size: 16px;
  color: #fff;
  position: relative;
  & > .left{
    width: 200px;
    height: 100%;
    flex: none;
    margin-right: 10px;
    background-color: #081220;
    overflow-y: auto;
    & > img {
      width: 50px;
    }
    li{
      line-height: 46px;
      margin-top: 5px;
      cursor: pointer;
      color: fade(#fff, 60%);
      text-align: center;
      &:hover{
        background-color: #23364c;
      }
      &.active{
        background-color: #23364c;
        color: #fff;
      }
    }
  }
  & > .right{
    flex: auto;
    display: flex;
    flex-direction: column;
    padding: 0 10px;
    & > .header{
      display: flex;
      .left{
        flex: auto;
      }
      .right{
        flex: none;
      }
      .ant-input{
        background: #111c31;
        border: unset;
        color: #fff;
        height: 46px;
        &:focus{
          box-shadow: 0 0 3px 1px rgba(158, 197, 255, 0.582);
        }
      }
      .ant-btn{
        background: #111c31;
        color: fade(#fff, 60%);
        border-color: #1c97b8;
        margin-left: 20px;
        height: 44px;
        width: 80px;
        &:hover{
          color: #fff;
        }
      }
    }
    .list {
        height: 75%;
        overflow: auto;
        display: flex;
        align-content: flex-start;
        flex-wrap: wrap;
        li {
          width: 45%;
          margin: @layout-space-base;
          padding: @padding-xs @padding-sm;
          text-align: center;
          background: #181832;
          background-size: 100%;
          background-position: 0 0;
          color: #fff;
          white-space: nowrap;
          display: flex;
          justify-content: center;
          align-items: center;
          position: relative;
          &:nth-child(2n) {
            margin-left: auto;
          }
          &::before {
            height: 23px;
            content: '';
            position: absolute;
            top: -8px;
            left: -3px;
            right: -3px;
            background: url('../../../assets/img/screen/list-top-bg.png') no-repeat;
            background-size: 100%;
          }
          span {
            padding: 0 @padding-xs;
            display: inline-block;
            width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
          }
        }
    }
    .pagination {
        width: 120px;
        padding: @padding-xs @padding-lg;
        margin: auto;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: @border-radius-base;
        color: fade(#fff, 80%);
        background: fade(#000, 30%);
        .current {
            color: #fff;
        }
        .prev, .next {
            margin: 0 16px;
            cursor: pointer;
        }
    }
  }
}
</style>
