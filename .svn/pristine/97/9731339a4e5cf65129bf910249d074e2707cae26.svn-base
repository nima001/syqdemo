<template>
  <div>
    <div class="title-bar">{{title}}</div>
    <bar-chart :dataTable="dataTable"/>
    <a-table
      style="padding-bottom: 20px;"
      :columns="columns"
      :dataSource="dataSource"
      :pagination="false"
    >
    </a-table>
  </div>
</template>
<script>
import { Table } from "ant-design-vue";
import BarChart from '@person/views/statistics/chart/components/BarChart'

/**
 * 通用的图表控件
 */
export default {
  components: {
    ATable: Table,
    BarChart,
  },
  props: {
    value: {
      type: Object,
      default: () => ({})
    },
    name: String,
    chartCols: {//图形 展示的列 （后续支持计算函数）
      type: Array,
    },
    tableCols: {
      type: Array,
    },
    warnCols: {//需要提示的列（正数和负数会提示）
      type: Array
    },
    unittype: Number,
    district: String,
  },
  computed: {
    title(){
      let d;
      if(this.district){
        d = this.$store.getters.dictKey('usermanage.org.district', this.district);
        d = d ? d.text : '';
      }else{
        d = "全市"
      }
      return d + this.name;
    },
    dataTable(){//图的数据表
      if(this.chartCols){
        let valueCols = this.value.valueCols.filter(item => {
          return !this.chartCols || !!this.chartCols.find(key => key == item.key);
        });
        if(valueCols && valueCols.length){
          return { ...this.value, valueCols}
        }
      }
      return this.value;
    },
    columns(){
      let {keyCols, valueCols} = this.value;
      let cols = [], group;
      valueCols.forEach(item => {
        if(!this.tableCols || !!this.tableCols.find(key => key == item.key)){
          let c = {
            title: item.showname, 
            align: 'center', 
            dataIndex: item.column, 
            key: item.key,
          }
          if(this.warnCols && this.warnCols.indexOf(item.key) >= 0){
            c.customRender = (text) => {
              if(text > 0){
                return <span style="color:#5488d1">{text}</span>
              }else if(text < 0){
                return <span style="color:#d60002">{text}</span>
              }
              return text;
            };
          }
          if(item.sort){//存在分组
            if(group && group.title == item.sort){
              group.children.push(c);
            }else{
              group = { title: item.sort, children: [c] }
              cols.push(group);
            }
          }else{
            cols.push(c);
            group = null;
          }
        }
      })
      return [
         ... keyCols.map(item => ({
          title: item.showname, 
          align: 'center', 
          dataIndex: item.column, 
        })),
        ... cols
      ]
    },
    total(){
      let {valueCols, keyCols, rows } = this.value;
      let row = this.sum(rows, valueCols);
      if(this.district){
        let d = this.$store.getters.dictKey('usermanage.org.district', this.district);
        row[keyCols[0].column] = (d ? d.text : '');
      }else{
        row[keyCols[0].column] = "全市";
      }
      return row;
    },
    dataSource(){
      return [this.total, ...this.value.rows]
    }
  },
  methods: {
    sum(list, valueCols){//求和
      let sum = {};
      (list || []).forEach(item => {
        valueCols.forEach(col => {
          let key = col.column;
          sum[key] = (sum[key] || 0) + (item[key] || 0);
        })
      });
      return sum;
    },
  }
}
</script>
<style lang="less" scoped>
.title-bar{
  margin: 10px 0;
  line-height: 1em;
  font-size: 18px;
  text-align: center;
  font-weight: bold;
}
/deep/.ant-table-thead {
  th {
    border: 1px solid #e8e8e8;
    &:first-child {
      border-left: none;
    }
    &:last-child {
      border-right: none;
    }
  }
}
</style>