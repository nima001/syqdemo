<template>
  <div class="org-case">
    <a-row :gutter="20">
      <a-col :span="24">
        <a-table 
          class="org-case-table"
          :rowKey="generateRowKey"
          :columns="columns" 
          :dataSource="tableData" 
          :pagination="false"
          :footer="handleFooterShow"
          :bordered="true"
          >
        </a-table>
      </a-col>
    </a-row>
  </div>
</template>

<script>
/*
**内设机构情况
*/
import { Row, Col, Table } from "ant-design-vue";
export default {
  props: {
    data: Array,
    str: String
  },
  components: {
    ARow: Row,
    ACol: Col,
    ATable: Table
  },
  data() {
    return {
      columns: [
        { title: '序号', customRender: (text, row, index) => index + 1, width: '10%' },
        { title: '内设机构名称', dataIndex: 'name', width: '45%' },
        { title: '是否综合性', dataIndex: 'synthesis', width: '45%' },
        // { title: '操作', scopedSlots: { customRender: "operation" }, width: '30%' }
      ],
      tableData: [],
      columnFooter: [
        { title: '内设机构名称', dataIndex: 'name', width: '55%' },
        { title: '内设机构名称', dataIndex: 'org', width: '45%' },
      ],
      footerDataSource: [
        {
          name: '是否超过33%',
          org: ''
        }
      ]
    };
  },
  watch: {},
  computed: {
  },
  created() {
    this.tableData = this.data;
  },
  mounted() {
    let arr = [], data = {};
    (this.data || []).forEach(item => {
      let obj = {}// 添加的属性 目前必须按照横向的顺序添加 待优化
      obj.sort = "" //  表格序号 方便获取表格项数
      obj.name = item.name
      obj.synthesis = item.synthesis
      arr.push(obj);
    })
    //  表头数据
    data.tableData = arr;
    data.isSort = true;
    data.headArr = ['序号', '内设机构名称', '是否综合性']
    this.$store.commit('setProcessedData', { key: this.str, data }); 
  },
  methods: {
    generateRowKey() {
      return Number(Math.random().toString().substr(3, 3) + Date.now()).toString(36)
    },
    handleFooterShow(data) {
      if(data.length > 0) {
        return (
          <a-table
            rowKey={Math.random}
            class="footer"
            bordered={false}
            pagination={false}
            columns={this.columnFooter}
            dataSource={this.footerDataSource}
            showHeader={false}
          ></a-table>
        );
      }else{
        return false;
      }
    },
  },
};
</script>
<style lang="less" scoped>
.org-case{  
  /deep/.ant-row{
    padding: @content-padding-v 0;
  }
  .org-case-table{
    /deep/.ant-table-body{
      
      th{
        > div{
          text-align: center;
        }
      }
      td{
        text-align: center;
      }
    }
    /deep/.ant-table-footer{
      background-color: @white;
      padding: 0;
      border: none;
      /deep/tr{
        /deep/td{
          text-align: center;
        }
      }
    }
  }
}
</style>