<template>
  <a-form-item v-if="formLayout != 'horizontal'" :label="name" :required="!!required" :validateStatus="validateStatus">
    <a-tooltip placement="topLeft" :title="help">
      <a-select v-model="propValue" :disabled="!!disabled" :class="{notEditor:!editor}" :allowClear="!required">
        <a-select-option :value="0">否</a-select-option>
        <a-select-option :value="1">是</a-select-option>
      </a-select>
    </a-tooltip>
  </a-form-item>
  <a-form-item v-else :required="!!required"  :validateStatus="validateStatus">
    <div class="compact" :class="{notEditor:!editor}">
      <div class="title" :title="name" :class="{required}">{{name}}</div>
      <a-tooltip placement="topLeft" :title="help">
        <a-select v-model="propValue" :disabled="!!disabled" :style="{flex:1}" :allowClear="!required"> 
          <a-select-option :value="0">否</a-select-option>
          <a-select-option :value="1">是</a-select-option>
        </a-select>
      </a-tooltip>
    </div>
  </a-form-item>  
</template>
<script>
import { Form, Switch,Select } from "ant-design-vue";
import { mixins } from "@formdesign/views/mixin/index";
import {get,set} from 'loadsh';
export default {
  title: '开关',
  components: {
    AFormItem: Form.Item,
    ASwitch: Switch,
    ASelect: Select,
    ASelectOption: Select.Option
  },
  mixins: [mixins],
  computed:{
    propValue: {
      // a-select组件值 不能为Boolean,所以要转化
      get () {
        let value = this.data ? get(this.data, this.code) : get(this.formData.data, this.code);
        if(typeof(value) === 'boolean' ){
          value = value == true ? 1: 0
        }
        return value
      },
      set (value) {
        let v = value
        if(value == 1 || value === 0){
          v= value == 1? true : false
        }
        if (this.data) {
          set(this.data, this.code, v)
        } else {
          set(this.formData.data, this.code, v)
        }
      }
    }    
  }
}
</script>
<style lang="less" scoped>
.ant-form-item {
  margin-bottom: 0;
  /deep/ .ant-form-item-required::before{
    color: @error-color;
  }
  .notEditor{
    position: relative;
    pointer-events: none;
    &::before{
      content: '';
      position: absolute;
      left: 0px;
      top: 0px;
      width: 100%;
      height: 100%;
      z-index: 3;
      cursor: not-allowed;
      
    }
    &:hover /deep/.ant-input{
      border-color: @border-color-base;
    }
  }  
  .compact {
    display: flex;
    padding: 4px 0px;
    .title {
      min-width: 5em;
      max-width: 10em;
      text-align: left;
      box-sizing: content-box;
      padding: 0px 11px;
      height: 30px;
      line-height: 30px;
      color: rgba(0, 0, 0, 0.75);
      font-size: 14px;
      background-color: #fafafa;
      border: 1px solid #d9d9d9;
      border-radius: 4px;
      border-right: none;
      border-top-right-radius: 0px;
      border-bottom-right-radius: 0px;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      &.required{
        position: relative;
        &::before{
          display: inline-block;
          color: red;
          font-size: 14px;
          font-family: SimSun, sans-serif;
          line-height: 1;
          content: '*';
          position: absolute;
          left:2px;
          top: 50%;
          transform: translateY(-50%)
        }        
      }
    }
    /deep/ .ant-select-selection {
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
    }
  }  
}
</style>