<template>
  <div class="add-role">
    <!-- <div class="toolbar">
      <div class="left">
      </div>
      <div class="right">
        <ul>
          <li>
            <a-input 
              placeholder="请输入角色编码"
              allowClear
              v-model="search.codelike">
            </a-input>
          </li>
          <li>
            <a-input 
              placeholder="请输入角色名称"
              allowClear
              v-model="search.namelike">
            </a-input>
          </li>
          <li>
            <a-button type="primary" @click="onSearch">查询</a-button>
          </li>
          <li>
            <a-button @click="onReset">重置</a-button>
          </li>
        </ul>
      </div>
    </div> -->
    <div class="body">
      <a-table
        :columns="columns"
        :dataSource="page.rows"
        rowKey="id"
        :loading="pageLoading"
        :pagination="false"
        :rowClassName="(record) => selectRole && selectRole.id == record.id ? 'selected': ''"
        :customRow="row => ({on:{click: () => {onRowClick(row)}}})"
      ></a-table>
    </div>
    <div class="footer">
      <a-pagination
        v-if="page.rows && page.rows.length"
        showSizeChanger
        :showTotal="total => `总共：${total}条`"
        @showSizeChange="onShowSizeChange"
        :total="page.total"
        :pageSize="page.pagesize"
        v-model="page.pagenum"
        @change="onPageChange"
      />
      <!-- <a-button class="step-next" type="primary" @click="addRole">确定</a-button> -->
    </div>
  </div>
</template>
<script>
import { Button, Table, Pagination, Input } from "ant-design-vue";
import { Listproblem } from "@/person-shaoxing/api/monitor";
import { showError } from "@/framework/utils/index";
export default {
  name: "AddRole",
  props: ['problemid'],
  data() {
    return {
      columns: [
        { title: "序号", customRender: (text, record, index) => ((this.page.pagenum - 1)*this.page.pagesize) + (index + 1) },
        { title: "类别", dataIndex: "businesstype", customRender: this.dictRender('person.shaoxing.monitor.businesstype') },
        { title: "机构名称", dataIndex: "description", },
        { title: "创建时间", dataIndex: "discovertime", customRender: (text) => (text && text.substr(0, 10)) },
      ],
      selectRole: null,
      search: {
        codelike: null,
        namelike: null
      },
      pageLoading: false,
      page: {
        rows: null,
        pagesize: 20,
        pagenum: 1,
        total: 0
      },
    }
  },
  components: {
    ATable: Table,
    AButton: Button,
    APagination: Pagination,
    AInput: Input
  },
  created() {
    this.loadData(this.page);
  },
  methods: {
    loadData(page) {
      this.pageLoading = true;
      Listproblem({
        ...page,
        needtotal: true,
        problemid: this.problemid,
      })
      .then(({result}) => {
        this.pageLoading = false;
        this.page = result;
      })
      .catch(err => {
        showError(err);
      })
    },
    dictRender(key, attr){
      return (text, row, index) => {
        let v =  this.$store.getters.dictKey(key || row[attr], text);
        text = (v && v.text) || ''
        return <span title={text}>{text}</span>;
      }
    },
    onRowClick(row) {
      this.selectRole = row;
    },
    onSearch() {
      this.loadData({ pagenum: 1, pagesize: this.page.pagesize });
    },
    onReset() {
      this.search.namelike = null;
      this.search.codelike = null;
      this.loadData({ pagenum: 1, pagesize: this.page.pagesize });
    },
    onShowSizeChange(pagenum, pagesize) {
      this.loadData({ pagenum: 1, pagesize });
    },
    onPageChange(pagenum, pagesize) {
      this.loadData({ pagenum, pagesize });
    },
  }
}
</script>
<style lang="less" scoped>
.add-role{
  height: 100%;
  min-width: 1000px;
  display: flex;
  flex-direction: column;
  & > .toolbar {
    white-space: nowrap;
    padding: @content-padding-v @content-padding-h;
    .left {
      float: left;
    }
    .right {
      float: right;
    }
    ul {
      margin: 0;
      white-space: nowrap;
    }
    li {
      display: inline-block;
      margin-left: 8px;
      white-space: nowrap;
      .name {
        line-height: 32px;
        padding-right: 5px;
        vertical-align: middle;
      }
      .ant-input-group.ant-input-group-compact,
      .ant-select,
      .ant-btn,
      .ant-input-affix-wrapper {
        display: inline-block;
        vertical-align: middle;
      }
    }
    .pzwh-tooltip {
      font-size: @font-size-base;
      color: @primary-color;
    }
    .pzwh {
      width: auto;
      border: 1px solid #d9d9d9;
      border-radius: 4px;
      &:hover {
        border-color: @primary-color;
      }
      &:focus-within {
        border-color: @primary-color;
        box-shadow: 0 0 0 2px fade(@primary-color, 20%);
      }
      /deep/.ant-input {
        border: none;
        height: 30px;
      }
      /deep/.ant-input-group-addon {
        border: none;
        background: none;
        padding: 0 4px;
      }
    }
  }
  & > .body {
    flex: auto;
    min-height: 0;
    overflow: auto;
    padding: 0 @content-padding-h;
    /deep/tr.selected {
      background: @primary-2;
    }
    /deep/.opts > .disable {
      color: @disabled-color;
      cursor: not-allowed;
    }
  }
  & > .footer {
    padding: 12px @content-padding-h;
    border-top: 1px solid @border-color-base;
    .ant-pagination{
      float: left;
    }
    .ant-btn{
      float: right;
    }
  }
}
</style>