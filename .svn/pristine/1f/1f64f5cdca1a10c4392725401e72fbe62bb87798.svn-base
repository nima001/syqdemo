<template>
  <div class="table-list">
    <a-row class="antd-table-query">

      <a-col class="query-serach" :span="18">
        <a-input 
          allowClear
          class="queryitem" 
          style="width: 160px"
          v-model="search.searchkey"
          placeholder="请输入关键词"
          >
        </a-input>
        <a-button class="queryitem" type="primary" @click="onSearch">搜索</a-button>
        <a-button class="queryitem" @click="onReset">重置</a-button>
      </a-col>
    </a-row>
    <a-table
      class="stra-table"
      rowKey="id"
      :columns="initColumn"
      :dataSource="tableData"
      :pagination="false"
      :loading="loading"
      >
      <span slot="detail" class="operation" slot-scope="text, record">
        <a @click="onShowDetail(record.content)">查看详情</a>
      </span>
    </a-table>
    <div class="footer">
      <a-pagination
        v-if="tableData && tableData.length"
        showSizeChanger
        :showTotal="total => `总共：${total}条`"
        @showSizeChange="onShowSizeChange"
        :total="pagination.total"
        :pageSize="pagination.pagesize"
        v-model="pagination.pagenum"
        @change="onPageChange"
      />
    </div>
    <a-modal centered v-model="detailVisible" title="详情" ok-text="确认" cancel-text="取消" :footer=null>
      <p>{{detailContent}}</p>
    </a-modal>
  </div>
</template>
<script>
import { Row, Col, Input, Table, Pagination, Button, Modal } from "ant-design-vue";
import DictSelect from "@/framework/components/DictSelect";
import { dataqualityPage, dataqualitySendMsg } from "@/person-shaoxing/api/monitor";
import {listMonitorStrategy, batchExecuteStrategy, openOrStopStrategy} from "@/person/api/monitor"
import { loopTaskResult } from "@/framework/api/asynctask";
import { showError } from "@/framework/utils/index";
import TaskProgress from "@/framework/components/TaskProgress";
import notification from 'ant-design-vue/es/notification'
export default {
  name: 'TableList',
  props: ['district', 'orgid'],
  components: {
    ARow: Row,
    ACol: Col,
    AInput: Input,
    ATable: Table,
    AButton: Button,
    APagination: Pagination,
    AModal: Modal,
    DictSelect,
    TaskProgress
  },
  computed: {},
  watch: {
    district: {
      handler() {
        this.handlestatus = 2;
        this.getData({ pagenum: 1, pagesize: this.pagination.pagesize });
      },
      immediate: true
    },
    orgid() {
        this.getData({ pagenum: 1, pagesize: this.pagination.pagesize });
    }
  },
  data() {
    return {
      initColumn: [
        { title: '类别', dataIndex: 'strategytype', customRender: this.dictRender('person.monitor.strategytype'), width: '10%' },
        { title: '相关部门', dataIndex: 'orgname', customRender: text => <span title={text}>{text}</span>, width: '20%' },
        { title: '问题或异动情况描述', dataIndex: 'content', customRender: text => <span title={text}>{text}</span>, width: '40%' },
        { title: '发现时间', dataIndex: 'createtime', customRender: (text) => (text && text.substr(0, 10)), width: '15%' },
        { title: "操作", width: "15%", scopedSlots: { customRender: "detail" }},
      ],
      tableData: [],
      loading: false,
      search: {
        searchkey: undefined,
        systype: undefined,
      },
      pagination: {
        total: 0,
        pagenum: 1,
        pagesize: 10
      },
      handlestatus: 0,
      strategytypeIn:[1,2,4],
      sendMsgVisible: false,

      detailVisible: false,
      detailContent: undefined,
      taskFinishVisible: false,
      taskFinishContent: undefined
    }
  },
  created() {
    },
  methods: {
    getData(page) {
      this.loading = true;
      if(this.orgid){//选择组织后不需要序列
        this.search.systype = undefined;
      }
      if(this.handlestatus == 1 || this.handlestatus == 0){
        this.strategytypeIn = [1,2,4];
      }else{
        this.strategytypeIn = [3];
      }
      let newHandlestatus = this.handlestatus;
      if(newHandlestatus == 2){
        newHandlestatus = 0;
      }

      let orgquery = JSON.stringify({
        district: this.district,
        systype: this.search.systype
      });
      
      let params = {
        ...page,
        needtotal: true,
        orgquery,
        orgid: this.orgid,
        handlestatus: newHandlestatus,
        searchkey: this.search.searchkey,
        strategytypeIn: this.strategytypeIn
      };
      dataqualityPage(params)
      .then(({result}) => {
        this.loading = false;
        this.pagination = result;
        this.tableData = result.rows;
      })
      .catch(err => {
        this.loading = false;
        showError(err);
      })
    },
    dictRender(key, attr){
      return (text, row, index) => {
        let v =  this.$store.getters.dictKey(key || row[attr], text);
        text = (v && v.text) || ''
        return <span title={text}>{text}</span>;
      }
    },
    onSearch() {
      this.getData({ pagenum: 1, pagesize: this.pagination.pagesize });
    },
    onReset() {
      for(let key in this.search) {
        this.search[key] = undefined;
      }
      this.getData({ pagenum: 1, pagesize: this.pagination.pagesize });
    },
    onPageChange(pagenum, pagesize) {
      this.getData({ pagenum, pagesize });
    },
    onShowSizeChange(pagenum, pagesize) {
      this.getData({ pagenum: 1, pagesize });
    },
    sendMsg(){
      dataqualitySendMsg("").then(res =>{
        this.$message.success('消息发送成功');
      }).catch(err =>{
        showError(err);
      })
      this.sendMsgVisible = false;
    },
    onShowDetail(content) {
      this.detailVisible = true;
      this.detailContent = content;
    }
  }
}
</script>
<style lang="less" scoped>
.table-list{
    margin-top: 20px;
  .antd-table-query{
    padding: @content-padding-v @content-padding-h;
    
    .query-serach{
        width: 100%;
      display: flex;
      justify-content: flex-end;
      padding-right: 20px;
      .queryitem{
        margin-left: 20px;
      }
    }
  }
  .antd-table-con{
    padding: @content-padding-v @content-padding-h;
  }
  .footer {
    display: flex;
    justify-content: flex-end;
    padding: 12px @content-padding-h;
  }
  .stra-table {
    padding: @content-padding-v @content-padding-h;
    /deep/table {
      table-layout: fixed;
      td,
      th {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
  }
}
</style>