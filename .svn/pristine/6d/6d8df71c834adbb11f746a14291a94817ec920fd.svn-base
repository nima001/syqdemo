<template>
<div>
    <div class="orgSwiper">
      <loading v-if="loading"/>
      <template v-else>
        <div class="top">
          <span class="title">{{typeName}}机构绩效平均分</span>
          <div class="lcdFont">
            <lcd-font :length="3" :precision="1" 
              :realNumber="average[page] && average[page].value" 
              :realStyle="{color: page == 1 ? '#ffd3a3' : '#8fc7ff'}"
            />
          </div>
        </div>
        <div class="middle">
          <div class="order">
            <span class="icon"></span>
            <span class="text">{{typeName}}机构排序</span>
          </div>
          <div class="all" @click="showAll">
            <span class="icon"></span>
            <span class="text">全部</span>
          </div>
        </div>
        <div class="swiperCont" v-if="list_xz.length && list_sy.length">
          <swiper-ant :size="2" :pretBtn="pretBtn" :nextBtn="nextBtn" v-model="page">
            <ul class="swiper" slot="swiper0">
              <li class="swiperItem" v-for="(item,index) in list_xz" :key="index" @click="detail={
                show: true, type: 'xz', orgid: item._id, orgname: item.name
              }">
                <span class="index">{{index+1}}</span>
                <span class="orgName" :title="item.name">{{item.shortname?item.shortname:item.name}}</span>
                <span class="percent">
                  <a-progress :showInfo="false" :percent="item.num" status="active"></a-progress>
                </span>
                <span class="text">{{item.num}}</span>
              </li>
            </ul>
            <ul class="swiper" slot="swiper1">
              <li class="swiperItem" v-for="(item,index) in list_sy" :key="index" @click="detail={
                show: true, type: 'sy', orgid: item._id, orgname: item.name
              }">
                <span class="index">{{index+1}}</span>
                <span class="orgName">{{item.shortname?item.shortname:item.name}}</span>
                <span class="percent">
                  <a-progress class="yellow" :showInfo="false" :percent="item.num" status="active"></a-progress>
                </span>
                <span class="text">{{item.num}}</span>
              </li>
            </ul>
          </swiper-ant>
        </div>
      </template>
    </div>
    <org-list v-model="orgList.show" 
      :title="orgList.title" 
      :systype="true"
      :loadPage="orgList.loader"  
      @click="(item) => detail= {
        show:true,
        type: orgList.page== 0 ? 'xz':'sy', 
        orgname:item.name,
        orgid:item._id
      }"
    >
      <div slot="item" slot-scope="org" class="org-item">
        <div class="name">{{org.name}}</div>
        <div class="num">{{org.num}}</div>
      </div>
    </org-list>
    <dialog-box v-model="detail.show" :title="detail.orgname + '绩效评估详情'" :destroyOnClose="true">
      <kpi-detail :id="detail.orgid" :type="detail.type" />
    </dialog-box>
</div>
</template>
<script>
import LcdFont from "../components/LcdFont";
import { Progress } from "ant-design-vue";
import { mixins } from "../components/minxin";
import { query } from "@/person/api/integratedquery";
import { aggregateQuery } from "@/person/api/chart";
import SwiperAnt from "../components/SwiperAnt";
import DialogBox from "../components/DialogBox";
import KpiDetail from "./KpiDetail";
import { showError } from "@/framework/utils/index";
import OrgList from "../components/OrgList";
import Loading from "../components/Loading";
export default {
  components: { LcdFont, AProgress: Progress, SwiperAnt, DialogBox, KpiDetail,OrgList,Loading },
  data() {
    return {
      pretBtn: {
        left: "-40px"
      },
      nextBtn: {
        right: "-40px"
      },
      params: [
        { unittypes: [1], field: '_id@organization.statistic.zgdwjxpg'},
        { unittypes: [2, 3], field: '_id@organization.statistic.sydwjxpg'},
      ],
      list_xz: [],
      list_sy: [],
      average: [],
      page: 0,
      loading:true,
      detail: {
        show: false,
        type: 'xz',
        orgid: undefined,
        orgname: undefined,
      },
      orgList: {
        show: false,
        title: "",
        page: 0,
        params: {}
      }
    };
  },
  mixins: [mixins],
  watch: {
    dictId(v) {
      this.getData();
      this.getAverage();
    }
  },
  computed: {
    typeName() {
      if (this.average[this.page]) {
        return this.average[this.page].type;
      }
    }
  },
  mounted() {
    this.getData();
    this.getAverage();
  },
  methods: {
    showAll(){
      let params = this.params[this.page];
      this.orgList = {
        show: true,
        page: this.page,
        title: this.typeName +"机构排行" + "榜单",
        loader: (page) => {
          return this.request(Object.assign({}, params, page))
        }
      };
    },
    request({unittypes, field, searchkey, systype, pagenum, pagesize, needtotal}) {
      let filter = [];
      if(searchkey){
        filter.push({ field: { key: "name" }, op: "regex", value: searchkey })
      }
      if(systype){
        filter.push({ field: { key: "systype" }, op: "eq", value: systype })
      }
      return query({
        target: { id: 1 },
        filter: {
          op: "and",
          criteria: [
            ...filter,
            { field: { key: "unittype" }, op: "in", value: unittypes },
            { field: { key: "district" }, op: "eq", value: this.dictId },
            { field: { key: "syssort" }, op: "ne", value: "a14" }//机构类别不等于设在党政部门的机关
          ]
        },
        fields: [
          { key: "name", showname: "机构名称" },
          { key: "shortname", showname: "简称" },
          { key: field, showname: "单位绩效评估" },
        ],
        orders: [
          { orderby: field, ordertype: "DESC" },
          { orderby: 'index', ordertype: "ASC" }
        ],
        pagenum,
        pagesize,
        needtotal,
      }).then(({result: {total, pagenum, pagesize, header, rows}}) => {
        let col = header.find(item => item.key == field);
        return {
          result: {
            total, pagenum, pagesize,
            rows: rows.map(item => {
              return {
                _id: item._id,
                name: item.name,
                shortname: item.shortname,
                num: Number((item[col.column] || 0).toFixed(1))
              }
            })
          }
        }
      });
    },
    getData() {
      let q1 = this.request({
        ...this.params[0],
        pagenum: 1,
        pagesize: 5,
        needtotal: true
      });
      let q2 = this.request({
        ...this.params[1],
        pagenum: 1,
        pagesize: 5,
        needtotal:true
      });
      Promise.all([q1, q2]).then(res => {
        let [{ result: result1 }, { result: result2 }] = res;
        this.list_xz = result1.rows;
        this.list_sy = result2.rows;
        this.loading = false;
      });
    },
    getAverage() {
      aggregateQuery({
        query: {
          target: { id: 1, model: "organization" },
          fields: [
            { key: "name", showname: "机构名称" },
            { key: "unittype", showname: "单位类别" },
            { key: "_id@organization.statistic.zgdwjxpg", showname: "主管绩效评估" },
            { key: "_id@organization.statistic.sydwjxpg", showname: "事业绩效评估" },
          ],
          filter: {
            op: "or",
            criteria: [
              {
                op: 'and',
                criteria: [
                  { field: { key: "district" }, op: "eq", value: this.dictId },
                  { field: { key: "unittype", showname: "单位类别" }, op: "in", value: [1, 2, 3] },
                  { field: { key: "syssort" }, op: "nin", value: ["a14", "a20", "a40"] },//机构类别不等于设在党政部门的机关、人大、政协
                ]
              },
              {
                op: 'and',
                criteria: [
                  { field: { key: "syssort" }, op: "in", value: ["a20", "a40"] },
                  { field: { key: "name" }, op: "regex", value: "办公室" }
                ]
              }
            ]
          }
        },
        groupby: {
          with: [
            {
              type: "section",
              key: "unittype",
              showname: "单位类别",
              section: {
                items: [
                  { name: "行政", values: ["xz"] },
                  { name: "事业", values: ["cg", "sy"] }
                ],
                other: false,
                otherName: "其它"
              }
            }
          ],
          fields: [
            { type: "avg", key: "_id@organization.statistic.zgdwjxpg", showname: "主管单位绩效评估" },
            { type: "avg", key: "_id@organization.statistic.sydwjxpg", showname: "事业单位绩效评估" }
          ]
        }
      }).then(res => {
        let { rows } = res.result.data;
        this.average = [
          { type: rows[0].k0, value: rows[0].v0 },
          { type: rows[1].k0, value: rows[1].v1 },
        ]
      }).catch(err => {
        showError(err);
      });
    }
  }
};
</script>
<style lang='less' scoped>
.orgSwiper {
  position: absolute;
  right: 88px;
  top: 50%;
  transform: translateY(-50%);
  /deep/ svg{
    position: static!important;
  }
  .top {
    display: flex;
    flex-direction: column;
    background: none;
    margin: 0 auto;
    padding: 0px;
    align-items: center;
    .title {
      height: 21px;
      font-size: 16px;
      font-family: Microsoft YaHei;
      font-weight: 400;
      line-height: 21px;
      color: #ffffff;
      opacity: 0.8;
    }
    .lcdFont {
      padding: 20px 0px;
    }
  }
  .middle {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 270px;
    margin: 5px auto;
    .order {
      display: flex;
      align-items: center;
      .icon {
        width: 20px;
        height: 20px;
        background: url("../img/order.png");
      }
      .text {
        height: 26px;
        font-size: 20px;
        font-family: Microsoft YaHei;
        font-weight: bold;
        line-height: 26px;
        color: #ffffff;
        opacity: 0.8;
        margin-left: 8px;
      }
    }
    .all {
      display: flex;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
      .icon {
        width: 16px;
        height: 16px;
        background: url("../img/all.png");
      }
      .text {
        height: 22px;
        font-size: 16px;
        font-family: Alibaba PuHuiTi;
        font-weight: bold;
        line-height: 22px;
        color: #ffffff;
        letter-spacing: 2px;
        opacity: 0.6;
        margin-left: 8px;
      }
    }
  }
  .swiperCont {
    width: 270px;
    height: 220px;
    .swiper {
      margin: 0px;
      .swiperItem {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 8px 0px;
        cursor: pointer;
        &:hover{
          background-color: #333333b0;
        }
        .index {
          width: 20px;
          height: 22px;
          font-size: 16px;
          font-family: XinYuGongPinBoTi;
          font-weight: 400;
          line-height: 22px;
          color: #8fc7ff;
          text-align: center;
        }
        .orgName {
          flex: auto;
          width: 108px;
          height: 22px;
          margin-left: 8px;
          font-size: 16px;
          font-family: Microsoft YaHei;
          font-weight: 400;
          line-height: 22px;
          color: #ffffff;
          opacity: 0.6;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .percent {
          width: 50px;
          margin-left: 8px;
          /deep/ .ant-progress {
            &.yellow .ant-progress-inner .ant-progress-bg {
              background-color: #ffd3a3;
            }
            .ant-progress-inner {
              background-color: #343434;
              .ant-progress-bg {
                background-color: #8fc7ff;
              }
            }
          }
        }
        .text {
          height: 22px;
          width: 2em;
          font-size: 16px;
          font-family: Microsoft YaHei;
          font-weight: 400;
          line-height: 22px;
          text-align: center;
          color: #ffffff;
          opacity: 0.6;
        }
      }
    }
  }
}
.org-item{
  display: flex;
  .name{
    flex: auto;
    text-overflow: ellipsis;
    overflow: hidden;
  }
  .num{
    flex: none;
    color: #8fc7ff;
    margin-left: 10px;
  }
}
</style>