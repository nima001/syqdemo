<template>
  <div class="form-group">
    <!-- <a-form :form="form"> -->
      <template v-for="item in props">
        <component 
          ref="inputBox"
          :is="`input-${item}`"
          :property="item"
          :itemLayout="formLayout"
        >
        </component>
      </template>
    <!-- </a-form> -->
  </div>
</template>

<script>
import { Form } from 'ant-design-vue';
import InputOrg from '@/person-shaoxing/views/assessment/compileAssist/components/InputOrg';
import InputText from '@/person-shaoxing/views/assessment/compileAssist/components/InputText';
import InputTable from '@/person-shaoxing/views/assessment/compileAssist/components/InputTable';
import InputStaffchange from '@/person-shaoxing/views/assessment/compileAssist/components/InputStaffchange';
import InputDistrict from '@/person-shaoxing/views/assessment/compileAssist/components/InputDistrict';
import InputOrgline from '@/person-shaoxing/views/assessment/compileAssist/components/InputOrgline';
import InputCompilenum from '@/person-shaoxing/views/assessment/compileAssist/components/InputCompilenum';
export default {
  props: {
    formConfig: {
      type: Array
    },
    formLayout: {
      type: Object,
      default: {
        labelCol: { span: 6 },
        wrapperCol: { span: 12 }
      }
    },
    props: {
      type: Array
    }
  },
  components: { 
    AForm: Form,
    InputOrg,
    InputText,
    InputTable,
    InputStaffchange,
    InputDistrict,
    InputOrgline,
    InputCompilenum
  },
  data() {
    return {
    };
  },
  watch: {},
  computed: {},
  beforeCreate() {
    this.form = this.$form.createForm(this);
  },
  created() {},
  mounted() {},
  methods: {
    validateFields(obj){
      return Promise.all((this.$refs.inputBox || []).map(ele => {
        return ele.validateField(obj);
      }))
    }
  },
};
</script>
<style lang="less" scoped>
.form-group{
  height: 100%;
}
</style>