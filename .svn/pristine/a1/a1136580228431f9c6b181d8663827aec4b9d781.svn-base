<template>
  <div class="chartlist">
    <div class="header">
      <qlsxselect
        :codes.sync="codes"
        :qlsxOptions.sync="qlsxOptions"
        :type="'skip'"
        style="width: 25%"
      />
    </div>
    <div class="content">
      <div class="chartcontent left">
        <div class="top-chart">
          <div class="chart1 chart">
            <chartconsole
              :loading="loading_one"
              :chartType="'bar-chart'"
              :setting="{ 'type': 'bar', 'color': '#76C722' }"
              :queryData.sync="queryData.qlsxdistribution"
              @qlsxdiStrict="qlsxdiStrict"
            >
              <template slot="detail" v-if="queryData.qlsxdistribution">
                <div class="header">
                  <span class="detail">
                    <h2 class="title">地区分布</h2>
                    <span @click="toDetail(1)"><a-icon type="file-text" /> <span class="text">查看详情</span></span>
                  </span>
                </div>
              </template>
            </chartconsole>
          </div>
          <div class="chart2 chart">
            <chartconsole
              :loading="loading_two"
              :chartType="'bar-chart'"
              :queryData.sync="queryData.qlsxdistrictsame"
            >
              <template slot="detail" v-if="queryData.qlsxdistrictsame">
                <div class="header">
                  <span class="detail">
                    <h2 class="title">绍兴市共性、个性事项分布情况</h2>
                    <span @click="toDetail(4)"><a-icon type="file-text" /> <span class="text">查看详情</span></span>
                  </span>
                  <ul class="desc">
                    <li>共性事项数 <span>{{ this.generalitynum }}</span></li>
                    <li>个性事项数 <span>{{ this.personalitynum }}</span></li>
                  </ul>
                </div>
              </template>
            </chartconsole>
          </div>
        </div>
        <div class="bottom-chart">
          <div class="chart3 chart">
            <chartconsole
              :loading="loading_three"
              :chartType="'line-chart'"
              :queryData.sync="queryData.qlsxtransform"
              @qlsxdateLine="qlsxdateLine"
            >
              <template slot="detail" v-if="queryData.qlsxtransform">
                <div class="header">
                  <span class="detail">
                    <h2 class="title">绍兴市权力事项变化趋势(总量)</h2>
                    <span @click="toDetail(3)"><a-icon type="file-text" /> <span class="text">查看详情</span></span>
                  </span>
                  <ul class="screen">
                    <li
                      v-for="item in screen"
                      :key="item.value"
                      @click="Active(item)"
                      :class="{ active: checkActive(item) }"
                    >
                      {{ item.text }}
                    </li>
                  </ul>
                </div>
              </template>
            </chartconsole>
          </div>
          <div class="chart4 chart">
            <chartconsole
              :loading="loading_four"
              :chartType="'line-chart'"
              :queryData.sync="queryData.qlsxpersonal"
              @qlsxPersonal="qlsxPersonal"
            >
              <template slot="detail" v-if="queryData.qlsxpersonal">
                <div class="header">
                  <span class="detail">
                    <h2 class="title">绍兴市权力事项变化趋势(个性)</h2>
                    <span @click="toDetail(4)"><a-icon type="file-text" /> <span class="text">查看详情</span></span>
                  </span>
                  <ul class="screen">
                    <li
                      v-for="item in screen"
                      :key="item.value"
                      @click="personActive(item)"
                      :class="{ active: checkPersonActive(item) }"
                    >
                      {{ item.text }}
                    </li>
                  </ul>
                </div>
              </template>
            </chartconsole>
          </div>
        </div>
      </div>
      <div class="chartcontent right">
        <div class="right-chart right-chart1">
          <div class="chart5">
            <chartconsole
              :loading="loading_one"
              :chartType="'bar-chart'"
              :setting="{ 'type': 'bar', 'color': '#D497F3' }"
              :queryData.sync="queryData.qlsxtype"
            >
              <template slot="detail" v-if="queryData.qlsxtype">
                <div class="header">
                  <span class="detail">
                    <h2 class="title">类别分布</h2>
                    <span @click="toDetail(2)"><a-icon type="file-text" /> <span class="text">查看详情</span></span>
                  </span>
                </div>
              </template>
            </chartconsole>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import { Icon } from "ant-design-vue";
import chartconsole from "./components/chartconsole";
import qlsxselect from "./components/qlsxselect";
import { assign, cloneDeep, orderBy } from "lodash";
import { showError } from "@/framework/utils";
import {
  qlsxdistrict,
  qlsxline,
  qlsxlinetable,
  qlsxdateline,
  qlsxsearchorg,
  qlsxsearchcode,
  districtsame,
  qlsxpersonal,
} from "@/person-shaoxing/api/assessment";
import { validateCom } from "@/framework/api/menu";
import dict from "@/framework/store/modules/dict";
export default {
  components: {
    AIcon: Icon,
    chartconsole,
    qlsxselect,
  },
  data() {
    return {
      check: 3,
      personcheck: 1,
      codes: [],
      valihaspermit: false, //组件权限
      qlsxOptions: [],
      loading_one: true,
      loading_two: true,
      loading_three: true,
      loading_four: true,
      generalitynum: 0, //共性事项数： 7
      personalitynum: 0, //个性事项数： 1，2，3，4，5，6
      setting: { title: undefined },
      screen: [
        { text: "年度", value: 1 },
        { text: "季度", value: 3 },
        { text: "月度", value: 4 },
      ],
      queryData: {
        qlsxdistribution: undefined, //绍兴市权力事项区划分布情况
        qlsxtype: undefined, //绍兴市权力事项分类情况
        qlsxtransform: undefined, //绍兴市权力事项变化趋势(总量)
        qlsxdistrictsame: undefined, //绍兴市共性权力事项分布情况
        qlsxpersonal: undefined,////绍兴市权力事项变化趋势(个性)
      },
    };
  },
  computed: {
    dict() {
      return this.$store.getters.dict("person.business.businesstype");
    },
  },
  watch: {
    check(val) {
      this.queryData.qlsxtransform = undefined;
      this.qlsxdateLine();
      return val;
    },
    personcheck(val) {
      this.queryData.qlsxpersonal = undefined;
      this.qlsxPersonal();
      return val;
    },
    dict(val) {
      return val;
    },
  },
  async created() {
    await this.valiDateCom();
    if (!this.valihaspermit) {
      this.$router.replace({ name: "details", params: { active: "history" } });
    }
  },
  mounted() {
    this.qlsxdiStrict(1);
    this.qlsxdateLine();
    this.districtSame();
    this.qlsxPersonal();
  },
  methods: {
    //验证组件是否有权限
    async valiDateCom() {
      await validateCom("/person/qlsx/chart")
        .then(({ result }) => {
          this.valihaspermit = result;
        })
        .catch((err) => {
          showError(err);
        });
    },
    Active(item) {
      this.check = item.value;
    },
    personActive(item) {
      this.personcheck = item.value;
    },
    checkActive(item) {
      return this.check === item.value;
    },
    checkPersonActive(item) {
      return this.personcheck === item.value;
    },
    toDetail(val) {
      let active = undefined;
      if (val === 1 || val === 2) {
        active = { active: "history" };
      } else if (val === 3) {
        active = { active: "transformation", checked: this.check };
      } else if (val === 4) {
        active = { active: "issue", codes: this.codes };
      }
      this.$router.push({ name: "details", params: { ...active } });
    },
    initData(showname) {
      let initquerydata = {
        data: {
          keyCols: [{ column: "k0", key: "strict", showname: showname }],
          valueCols: [{ column: "v0", showname: "事项数" }],
          rows: [],
        },
      };
      return initquerydata;
    },
    loadData(data) {
      this.queryData.qlsxdistribution = cloneDeep(this.initData("区划"));
      this.queryData.qlsxtype = cloneDeep(this.initData("事项分类"));
      data.forEach((item) => {
        if (item.name !== "总计") {
          //绍兴市权力事项区划分布情况
          this.queryData.qlsxdistribution.data.rows.push({
            k0: item.name,
            v0: item.total,
          });
        } else {
          if (this.dict) {
            this.queryData.qlsxtype.data.rows.push({
              k0: "全部权利",
              v0: item.total,
            });
            this.dict.forEach((dictItem, index) => {
              this.queryData.qlsxtype.data.rows.push({
                k0: dictItem.text,
                v0: item.data[dictItem.key],
              });
            });
          }
        }
      });
    },
    qlsxdiStrict(type) {
      this.loading_one = true;
      qlsxdistrict(type)
        .then((res) => {
          this.loading_one = false;
          if (res.result) {
            this.loadData(res.result);
          } else {
            this.queryData.qlsxdistribution = undefined;
          }
        })
        .catch((err) => {
          this.loading_one = false;
          showError(err);
        });
    },
    getDate() {
      let myDate = new Date();
      var tYear = myDate.getFullYear();
      var tMonth = myDate.getMonth();
      return `${tYear}-${tMonth + 1}-1`;
    },
    loadQuarter(check,date) {
      let result = undefined;
      if (check === 1) {
        //年度
        let year = date.split("-")[0];
        result = `${year}年度`;
      } else if (check === 3) {
        //季度
        let month = date.split("-")[1];
        if (month < 4) {
          result = `${date.split("-")[0].substr(-2, 2)}年第1季度`;
        }
        if (3 < month && month < 7) {
          result = `${date.split("-")[0].substr(-2, 2)}年第2季度`;
        }
        if (6 < month && month < 10) {
          result = `${date.split("-")[0].substr(-2, 2)}年第3季度`;
        }
        if (month > 9) {
          result = `${date.split("-")[0].substr(-2, 2)}年第4季度`;
        }
      } else {
        //月度
        let month = date.split("-")[1];
        result = `${date.split("-")[0].substr(-2, 2)}年${month}月`;
      }
      return result;
    },
    qlsxPersonal() {
      let data = {
        type: 4,
        dateStep: this.personcheck,
        orgid: "41e21453acc24719bd3f9faaadfb5e68",
      };
      this.loading_four = true;
      qlsxpersonal(data)
        .then((res) => {
          this.loading_four = false;
          if (res.result) {
            this.queryData.qlsxpersonal = cloneDeep(this.initData("时间"));
            orderBy(res.result, ["date"], ["asc"]).forEach((item) => {
              this.queryData.qlsxpersonal.data.rows.push({
                k0: this.loadQuarter(this.personcheck,item.date),
                v0: item.count,
              });
            });
          } else {
            this.queryData.qlsxpersonal = undefined;
          }
        })
        .catch((err) => {
          this.loading_four = false;
          showError(err);
        });
    },
    qlsxdateLine() {
      let data = {
        type: 1,
        dateStep: this.check,
        startDate: this.getDate(),
        orgid: "41e21453acc24719bd3f9faaadfb5e68",
      };
      this.loading_three = true;
      qlsxdateline(data)
        .then((res) => {
          this.loading_three = false;
          if (res.result) {
            this.queryData.qlsxtransform = cloneDeep(this.initData("时间"));
            orderBy(res.result.rows[0].data, ["date"], ["asc"]).forEach((item) => {
              this.queryData.qlsxtransform.data.rows.push({
                k0: this.loadQuarter(this.check,item.date),
                v0: item.total,
              });
            });
          } else {
            this.queryData.qlsxtransform = undefined;
          }
        })
        .catch((err) => {
          this.loading_three = false;
          showError(err);
        });
    },
    districtSame() {
      this.loading_two = true;
      this.generalitynum = 0;
      this.personalitynum = 0;
      districtsame()
        .then((res) => {
          this.loading_two = false;
          if (res.result) {
            this.queryData.qlsxdistrictsame = cloneDeep(this.initData("共性事项数"));
            for (let item in res.result) {
              if (item === "7") {
                this.generalitynum = res.result[item];
              } else {
                this.personalitynum += parseInt(res.result[item]);
              }
              this.queryData.qlsxdistrictsame.data.rows.push({
                k0: item,
                v0: res.result[item],
              });
            }
          } else {
            this.queryData.qlsxdistrictsame = undefined;
          }
        })
        .catch((err) => {
          this.loading_two = false;
          showError(err);
        });
    },
  },
};
</script>
<style scoped lang="less">
.chartlist {
  height: 100%;
  padding: @layout-space-base;
  display: flex;
  flex-direction: column;
  .header {
    height: 70px;
    margin-bottom: 10px;
    padding: @padding-xs @padding-lg;
    background-color: #ffffff;
  }
  & > .content {
    display: flex;
    flex: 1;
    & .chartcontent {
      height: 100%;
      .top-chart {
        margin-bottom: 10px;
      }
      .top-chart,.bottom-chart {
        display: flex;
        flex: 1;
        .chart {
          background: white;
        }
        .chart:first-child {
          margin-right: 10px;
        }
        .chart1 {
          width: 40%;
        }
        .chart2 {
          width: 60%;
        }
        .chart3,.chart4 {
          width: 50%;
        }
        .chart{
          padding: 10px;
        }
      }
    }
    .left {
      width: 70%;
      margin-right: 10px;
      display: flex;
      flex-direction: column;
    }
    .right {
      display: flex;
      width: 30%;
      background: white;
      padding: 10px;
      .right-chart {
        flex: 1;
        .chart5 {
          height: 100%;
        }
      }
    }
  }
}
</style>
