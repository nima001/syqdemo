<template>
  <div class="star-menu">
    <div ref="container" class="container">
      <swiper :options="swiperOption" :style="{width: `${containerWidth}px`}">
        <swiper-slide v-for="(page, index) in menuPages" :key="index">
          <div class="page">
            <div
              v-for="(app, index) in page"
              :key="index"
              :class="{ app: true, notempty: !!app }"
              @click="jump(app)"
            >
              <template v-if="app">
                <div v-if="app.id != 'add'">
                  <div class="remove" @click.stop="unStar(app.id, index)">
                    <a-icon type="minus-circle" />
                  </div>
                  <img
                    v-if="app.icon"
                    :src="
                      uiConfigs['api.url'] + '/file/v1/download?uri=' + app.icon
                    "
                    :onerror="`this.src='${defaultIcon}'`"
                  />
                  <img v-else :src="defaultIcon" />
                  <div>{{ app.name }}</div>
                </div>
                <div class="add-business" v-if="app.id == 'add'" @click="show">
                  <a-icon type="plus-circle" theme="filled" class="add" />
                  <div>添加</div>
                </div>
              </template>
            </div>
          </div>
        </swiper-slide>
        <AddBusiness
          :menuList="menuList"
          ref="addBusiness"
          @change="menuList = $event"
          @checkedList="addMenuList"
          class="add-menu"
        />
        <div class="swiper-button-prev" slot="button-prev"></div>
        <div class="swiper-button-next" slot="button-next"></div>
      </swiper>
    </div>
  </div>
</template>
<script>
import { Swiper, SwiperSlide, directive } from 'vue-awesome-swiper'
import 'swiper/swiper-bundle.css'
import { Icon } from "ant-design-vue";
import { updateStarMenu, getcollectMenu } from "../api/menu";
import { uiConfigsCookies } from "../utils/auth";
import { showError } from "../utils/index";
import EmptyData from "@/framework/components/EmptyData";
import AddBusiness from "./components/AddBusiness";
import { ResizeObserver } from "@juggle/resize-observer";

export default {
  name: "StarMenu",
  components: {
    AIcon: Icon,
    EmptyData,
    AddBusiness,
    Swiper,
    SwiperSlide,
  },
  data() {
    return {
      defaultIcon: require("../assets/img/icon-menu-default.png"),
      uiConfigs: uiConfigsCookies(),
      menuList: [],
      containerWidth: 0,
      resizeObserver: undefined,
      swiperOption: {
        loop: true,
        // 设置点击箭头
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
      },
    };
  },
  computed: {
    menuPages() {
      if (this.menuList) {
        let pages = [];
        let count = Math.floor(this.containerWidth / 120);
        const list = [...(this.menuList || []), { id: "add" }];
        if (count > 0) {
          let pageCount = Math.ceil(list.length / count);
          let index = 0;
          for (let i = 0; i < pageCount; i++) {
            let arr = new Array(count).fill(undefined);
            let j = 0;
            for (; index < list.length && j < count; index++, j++) {
              arr[j] = list[index];
            }
            pages.push(arr);
          }
        }
        return pages;
      }
    },
  },
  created() {
    this.getCollectList();
  },
  mounted() {
    this.resizeObserver = new ResizeObserver((entries, observer) => {
      const { width, height } = entries[0].contentRect;
      if(this.timer === undefined){
        this.containerWidth = width;
        this.timer = 0;
      }else{
        clearTimeout(this.timer);
        this.timer = setTimeout(() => {this.containerWidth = width}, 200);
      }
    });
    this.resizeObserver.observe(this.$refs.container);
  },
  destroyed() {
    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    }
  },
  methods: {
    show() {
      this.$refs.addBusiness.showModal();
    },
    addMenuList(list) {
      this.menuList = list;
    },
    unStar(id, index) {
      let ids = [];
      this.menuList.forEach((item, i) => {
        if (index != i) {
          ids.push(item.id);
        }
      });
      updateStarMenu(ids)
        .then((res) => {
          let index = this.menuList.findIndex((item) => item.id == id);
          if (index >= 0) {
            this.menuList.splice(index, 1);
          }
        })
        .catch((err) => {
          showError(err);
        });
    },
    getCollectList() {
      getcollectMenu()
        .then((res) => {
          this.menuList = res.result || [];
        })
        .catch((err) => {
          showError(err);
        });
    },
    jump(item) {
      if (!item) {
        return;
      }
      if (item.children && item.children.length > 0) {
        this.$router
          .push({
            name: "SubMenu",
            params: { id: item.id },
          })
          .catch((err) => {
            //ignore
          });
      } else if (item.componenturi) {
        if (item.componenturi.startsWith("redirect:")) {
          let path = item.componenturi.slice(9);
          let temp = path.toUpperCase();
          if (temp.startsWith("http:") || temp.startsWith("https:")) {
            window.open(path, "_blank");
          } else {
            const { href } = this.$router.resolve({ path });
            if (href) {
              window.open(href, "_blank");
            }
          }
        } else {
          this.$router.push(item.componenturi).catch((err) => {
            //ignore
          });
        }
      }
    },
  },
};
</script>
<style lang='less' scoped>
.star-menu {
  overflow: hidden;
}
/* .extra a {
  cursor: pointer;
  color: @text-color;
  margin-right: 5px;
} */
.container {
  height: 115px;
  width: 100%;
  float: left;
}
.swiper-container {
  .swiper-button-next,
  .swiper-button-prev {
    width: 25px;
    height: 25px;
    &:hover {
      opacity: 0.6;
    }
  }
  /deep/ .swiper-slide .page {
    display: flex;
    height: 115px;
    .app {
      position: relative;
      flex: 1;
      height: 100%;
      padding: 15px 5px;
      text-align: center;
      cursor: pointer;
      &.notempty:hover {
        box-shadow: 1px 1px 10px #dad9d9;
        .remove {
          display: block;
        }
      }
      .remove {
        position: absolute;
        right: 5px;
        top: 5px;
        display: none;
        &:hover {
          color: @error-color;
        }
      }
      img {
        width: 50px;
        height: 50px;
        margin: auto;
        margin-bottom: 5px;
        object-fit: contain;
      }
      .add-menu {
        margin-top: -15px;
      }
    }
  }
}
.add-business {
  height: 105px;
  width: 115px;
  position: relative;
  margin-top: -15px;
  /deep/.add {
    font-size: 50px;
    color: rgb(230, 230, 230);
    position: absolute;
    left: 50%;
    top: 15px;
    margin-left: -25px;
  }
  div {
    text-align: center;
    padding-top: 70px;
  }
}
</style>