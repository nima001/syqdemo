<template>
  <div class="Unfileddocument-query">
    <div class="panel">
      <div class="toolbar">
        <a-form :form="form" class="ant-advanced-search-form">
          <div class="box">
            <ul class="in-box">
              <li class="li-content">
                <div>
                  <span class="name">批准文号：</span>
                  <a-input-group compact class="pzwh">
                    <a-input  type="text" v-model="pagination.zihao" style="width: 30%" />
                    <a-input v-model="pagination.year" addonBefore="〔" addonAfter="〕" type="text" style="width: 40%; top: 0" />
                    <a-input v-model="pagination.ordinal" addonAfter="号" type="text" style="width: 30%; top: 0" />
                  </a-input-group>
                </div>
              </li>
              <li class="li-content">
                <div>
                  <span class="name">发文时间：</span>
                  <a-input-group compact style="top: 0">
                    <a-date-picker
                      placeholder="发文开始时间"
                      style="width: 50%"
                      v-model="startValue"
                      :disabled-date="disabledStartDate"
                    />
                    <a-date-picker
                      placeholder="发文结束时间"
                      style="width: 50%"
                      v-model="endValue"
                      :disabled-date="disabledEndDate"
                    />
                  </a-input-group>
                </div>
              </li>
              <li class="li-content">
                <div>
                  <span class="name">关键字:</span>
                  <div>
                    <a-input
                      v-model="pagination.searchkey"
                      placeholder="标题或文件内容"
                    />
                  </div>
                </div>
              </li>
              <li class="li-button">
                <div>
                  <span class="name"></span>
                  <div>
                    <a-button
                      @click="search"
                      type="primary"
                      style="margin-right: 10px"
                      >搜索</a-button
                    >
                    <a-button @click="onreset">重置</a-button>
                  </div>
                </div>
              </li>
            </ul>
          </div>
          <a-divider />
        </a-form>
      </div>
    </div>
    <div class="main">
      <upload-file
        :form="form"
        :active="active"
        :record.sync="record"
        :visible.sync="visible"
        :documentsubtype="documentsubtype"
        :doctype="doctype"
        @documentList="documentList"
      />
      <div class="list-content">
        <a-table
          :scroll="{ y: 370 }"
          :loading="loading"
          :columns="this.columns"
          :data-source="tableData"
          :pagination="false"
          :rowKey="(item) => item.id"
        >
          <template slot="action" slot-scope="text, record">
            <span v-if="active.id === 1">
              <span @click="showmodal(record)">归档</span>
              <span @click="downDoc(record)">下载</span>
              <span @click="delrecord(record.id)">删除</span>
            </span>
            <span v-else-if="active.id === 2">
              <span @click="downDoc(record)">下载</span>
              <span @click="documentReset(record.id)">恢复</span>
              <!-- <span @click="delrecord(record.id)">删除</span> -->
            </span>
          </template>
        </a-table>
        <a-pagination
          v-if="tableData.length"
          showSizeChanger
          :current="this.pagination.pagenum"
          :pageSize="this.pagination.pagesize"
          :total="this.pagination.total"
          :showTotal="(total) => `总共：${total}条`"
          @change="onChange"
          @showSizeChange="onShowSizeChange"
        />
      </div>
    </div>
  </div>
</template>

<script>
import {
  Form,
  Input,
  DatePicker,
  Button,
  Select,
  Divider,
  Icon,
  Modal,
  Table,
  Upload,
  Pagination,
} from "ant-design-vue";
import assign from "lodash/assign";
import UploadFile from "./UploadFile.vue";
import { download } from "@/framework/api/file";
import { documentlist, documentdel, documentreset, documentbyid } from "@/person-shaoxing/api/information";
import { showError } from "@/framework/utils";
const columns = [
  {
    title: "序号",
    dataIndex: "index",
    key: "index",
    width: "5%",
    customRender: (text, record, index) => `${index + 1}`,
  },
  {
    title: "文件标题",
    dataIndex: "title",
    key: "title",
  },
  {
    title: "批准文号",
    dataIndex: "num",
    key: "num",
    width: "15%",
  },
  {
    title: "发文时间",
    key: "dispatchdate",
    dataIndex: "dispatchdate",
    width: "15%",
  },
  {
    title: "操作",
    key: "action",
    dataIndex: "action",
    width: "15%",
    scopedSlots: { customRender: "action" },
  },
];
export default {
  props: {
    active: {
      type: Object,
    },
    loading: {
      type: Boolean,
    },
  },
  components: {
    AForm: Form,
    AFormItem: Form.Item,
    AInput: Input,
    AInputGroup: Input.Group,
    ADatePicker: DatePicker,
    ARangePicker: DatePicker.RangePicker,
    ASelect: Select,
    ASelectOption: Select.Option,
    AButton: Button,
    ADivider: Divider,
    AIcon: Icon,
    ATable: Table,
    AModal: Modal,
    AUpload: Upload,
    APagination: Pagination,
    UploadFile,
  },
  data() {
    return {
      visible: false,
      startValue: null,
      endValue: null,
      columns,
      record: {},
      pagination: {
        statusIn:[0],
        deleted: false,
        ordinal: undefined,
        year: undefined,
        zihao: undefined,
        starttime: undefined,
        endtime: undefined,
        searchkey: undefined,
        pagenum: 1,
        pagesize: 10,
        total: 0,
        needtotal: true,
        rows: [],
      },
      form: this.$form.createForm(this, { name: "docform" }),
    };
  },
  computed: {
    tableData() {
      return this.pagination.rows;
    },
    doctype() {
      //发文类型 即文件归档
      return this.$store.getters.dict("library.doctype");
    },
    documentsubtype() {
      return this.$store.getters.dict("library.documentsubtype");
    },
  },
  watch: {
    startValue(val) {
      this.pagination.starttime = val;
    },
    endValue(val) {
      this.pagination.endtime = val;
    },
    active(val) {
      this.onreset();
      this.pagination.rows = [];
      if (val.id === 1) {
        //未归档
        this.pagination.deleted = false;
      } else {
        //已删除
        this.pagination.deleted = true;
      }
      this.documentList(this.pagination);
    },
  },
  mounted() {
   this.documentList(this.pagination);
  },
  methods: {
    async showmodal(val) {
      await this.documentbyId(val.id);
    },
    disabledStartDate(startValue) {
      const endValue = this.endValue;
      if (!startValue || !endValue) {
        return false;
      }
      return startValue.valueOf() > endValue.valueOf();
    },
    disabledEndDate(endValue) {
      const startValue = this.startValue;
      if (!endValue || !startValue) {
        return false;
      }
      return startValue.valueOf() >= endValue.valueOf();
    },
    //翻页
    onChange(pagenum, pagesize) {
      assign(this.pagination, { pagesize, pagenum });
      this.documentList();
    },
    //pagesize改变回调
    onShowSizeChange(current, pagesize) {
      assign(this.pagination, { pagesize, pagenum: 1 });
      this.documentList();
    },
    onreset() {
      this.pagination.ordinal = undefined;
      this.pagination.year = undefined;
      this.pagination.zihao = undefined;
      this.pagination.starttime = undefined;
      this.pagination.endtime = undefined;
      this.pagination.searchkey = undefined;
      this.startValue = null;
      this.endValue = null;
    },
    search() {
      this.form.validateFields((err, values) => {
        if (!err) {
          this.documentList();
        }
      });
    },
    // delrecord(id) {
    //   let that = this;
    //   this.$confirm({
    //     title: "删除这条数据？",
    //     okText: "确定",
    //     cancelText: "取消",
    //     onOk() {
    //       documentdel(id)
    //         .then((res) => {
    //           if (res.code === "success") {
    //             that.$notification.success({
    //               message: "提示",
    //               description: "删除成功！",
    //               duration: 3,
    //             });
    //             that.documentList();
    //           } else {
    //             that.$notification.warning({
    //               message: "提示",
    //               description: "删除失败！",
    //               duration: 3,
    //             });
    //           }
    //         })
    //         .catch((err) => {
    //           showError(err);
    //         });
    //     },
    //   });
    // },
    documentbyId(id) {
      documentbyid(id).then((res)=>{
        this.record = res.result;
        this.visible = true;
      }).catch((err) => {
        showError(err);
      });
    },
    documentReset(id) {
      let that = this;
      documentreset(id)
        .then((res) => {
          if (res.code === "success") {
            that.$notification.success({
              message: "提示",
              description: "恢复成功！",
              duration: 3,
            });
            that.documentList();
          } else {
            that.$notification.warning({
              message: "提示",
              description: "恢复失败！",
              duration: 3,
            });
          }
        })
        .catch((err) => {
          showError(err);
        });
    },
    //文件下载
    downDoc(record) {
      if (record.fileuri) {
        download(record.fileuri);
      } else {
        this.$notification.warning({
          message: "提示",
          description: "暂无可下载内容!",
          duration: 3,
        });
      }
    },
    documentList() {
      this.$emit("update:loading", true);
      if (this.pagination.rows) {
        this.pagination.rows = [];
      }
      documentlist(this.pagination)
        .then((res) => {
          this.$emit("update:loading", false);
          if (res.result.rows.length) {
            assign(this.pagination, res.result);
          } else {
            this.$notification.warning({
              message: "提示",
              description: "暂无数据!",
              duration: 3,
            });
          }
        })
        .catch((err) => {
          this.$emit("update:loading", false);
          showError(err);
        });
    },
  },
};
</script>
<style scoped lang="less">
.Unfileddocument-query {
  .toolbar {
    width: 100%;
    margin: 0 auto;
    .ant-advanced-search-form {
      .in-box {
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 0;
      }
      .li-content:not(:last-child) {
        width: 30%;
      }
      /deep/.li-content {
        padding: @layout-space-base;
        padding-left: 0;
        & .pzwh {
          top: 0;
          display: inline-block;
          vertical-align: middle;
        }
        & .pzwh .ant-input {
          border: none;
          height: 30px;
        }
        & span.pzwh.ant-input-group {
          border: 1px solid #d9d9d9;
          border-radius: 4px;
        }
        & span.ant-input-group-addon {
          border: none;
          background: none;
          padding: 0 4px;
        }
      }
      .li-button {
        padding: @layout-space-base;
        padding-left: 0;
      }
      .name {
        line-height: 32px;
        padding-right: 5px;
      }
    }
  }
  .main {
    .ant-table span {
      margin-right: 8px;
      cursor: pointer;
    }
    .ant-table span span:hover {
      color: @primary-color;
    }
    /deep/.ant-table-tbody {
      & > tr > td {
        word-break: keep-all;
        white-space: nowrap;
      }
      & > tr > td {
        max-width: 160px;
        overflow: hidden;
        word-break: keep-all;
        white-space: nowrap;
        text-overflow: ellipsis;
      }
    }
    /deep/.ant-table-fixed-header .ant-table-scroll .ant-table-header {
      margin-bottom: 0;
      padding-bottom: 0;
      overflow-y: visible;
    }
    /deep/.ant-table-body {
      overflow-y: auto !important;
    }
    & .ant-pagination {
      float: right;
      margin-top: 8px;
    }
  }
}
</style>
