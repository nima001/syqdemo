<template>
  <div class="container">
    <a-input read-only class="code-one" v-model="showname" @click.native="showSelect = true">
      <a-icon slot="suffix" type="down" style="color: rgba(0,0,0,.25)" />
    </a-input>
    <a-modal title="字段选择" :destroyOnClose="true" :footer='null' @cancel='showSelect=false' :visible="showSelect" width='500px' :bodyStyle="{padding:'0px'}">
      <select-field :targetid="targetid" :criteria="defaultData" @finish="finishHandle"/>
    </a-modal>

    <op-select-two
      v-if="defaultData.opListTwo"
      :defaultData="defaultData"
      :position="position"
      :targetid="targetid"
    />
    <a-input
      type="number"
      v-model.number="defaultData.value"
      @change="handleChange"
      placeholder="请输入"
    />
  </div>
</template>
<script>
import OpSelectTwo from "./OpSelectTwo";
import { querylistop } from "@/person/api/integratedquery";
import { debounce, showError } from "@/framework/utils/index";
import { Popover, Input, Icon , Modal } from "ant-design-vue";
import SelectField from '../components/SelectField';

export default {
  name: "TypeOne",
  props: {
    position: {
      type: String,
      required: true
    },
    defaultData: {
      type: Object,
      required: true
    },
    targetid: {
      type: Number,
      required: true
    }
  },
  data(){
    return {
      showSelect : false
    }
  },
  components: {
    AModal:Modal,
    APopover: Popover,
    AInput: Input,
    AIcon: Icon,
    OpSelectTwo,
    SelectField
  },
  created() {
    if (this.defaultData.op && !this.defaultData.opListTwo) {
      this.getListop(this.defaultData.field.key);
    }
  },
  computed: {
    showname() {
      return this.defaultData.field2 ? this.defaultData.field2.showname : "";
    }
  },
  methods: {
    finishHandle(type,data){
      this.showSelect = false;
      if(type == 'ok'){
        this.getListop(data.key);
        this.$store.commit({
          type: "ADD_FIELD_TWO",
          position: this.position,
          field: data
        });
      }
    },
    getListop(key) {
      querylistop({
        targetid: this.targetid,
        key,
        op: this.defaultData.op
      }).then(res => {
        this.$store.commit({
          type: "SET_OP_LIST_TWO",
          position: this.position,
          data: res.result
        });
      }).catch(error => {
        showError(error);
      });
    },
    handleChange: debounce(function(e) {
      let value = parseInt(e.target.value);
      this.$store.commit({
        type: "SET_VALUE",
        position: this.position,
        value
      });
    }, 300)
  }
};
</script>
<style lang="less" scoped>
.container {
  display: flex;
  // flex: 3;
  width: 500px;
  .code-one {
    flex: 2;
    margin-right: 15px;
  }
  .ant-select {
    flex: 1;
    margin-right: 15px;
  }
  .ant-input {
    flex: 1;
  }
}
</style>