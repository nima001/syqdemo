<template>
  <div class="layout">
    <div class="content">
      <div class="top">
        <a-date-picker :style="{width:'200px'}" @change="dateChange"></a-date-picker>
      </div>
      <div class="middle">
        <a-table
          rowKey="id"
          :loading="loading"
          :customRow="customRow"
          :columns="columns"
          :data-source="dataSource"
          :pagination="false"
        ></a-table>
      </div>
      <div class="bottom">
        <a-pagination
          show-size-changer
          :total="pagination.total"
          :page-size="pagination.pagesize"
          :default-current="pagination.pagenum"
          :show-total="(total) => `共 ${total} 条`"
          @change="onChange"
          @showSizeChange="onShowSizeChange"
        ></a-pagination>
      </div>
    </div>
  </div>
</template>
<script>
import { DatePicker, Input, Table, Pagination, Select } from "ant-design-vue";
import { assign, cloneDeep } from "lodash";
import { showError } from "@/framework/utils/index";
export default {
  components: {
    ADatePicker: DatePicker,
    ASelect: Select,
    ASelectOption: Select.Option,
    ATable: Table,
    APagination: Pagination,
    AInputSearch: Input.Search
  },
  data() {
    return {
      loading: false,
      dataSource: [{ id: 1, orgName: "信息中心", people: 55, times: 22 }],
      query: {
        type: 1
      },
      pagination: {
        pagesize: 10,
        pagenum: 1,
        total: 0,
        needtotal: true
      }
    };
  },
  computed: {
    columns() {
      return [
        {
          title: "组织名称",
          dataIndex: "orgName"
        },
        {
          title: "人数",
          dataIndex: "people"
        },
        {
          title: "人员值班次数",
          dataIndex: "times"
        }
      ];
    }
  },
  methods: {
    customRow(row, index) {
      return {
        on: {
          click: () => {
            this.$emit("input", "PersonList");
          }
        }
      };
    },
    dateChange() {},
    selectChange() {},
    inputSearch() {},
    onChange(pagenum, pagesize) {
      assign(this.pagination, { pagesize, pagenum });
    },
    onShowSizeChange(current, pagesize) {
      assign(this.pagination, { pagenum: 1, pagesize });
    }
  }
};
</script>
<style lang='less' scoped>
.layout {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  .content {
    flex: 1;
    padding: @content-padding-v @content-padding-h;
    overflow-y: auto;
    min-height: 0px;
    background: @white;
    display: flex;
    flex-direction: column;
    border-radius: @border-radius-base;
    .top {
      display: flex;
      padding: @content-padding-v 0px;
      justify-content: flex-end;
    }
    .middle {
      flex-shrink: 1;
      padding: @content-padding-v 0px;
      overflow-y: auto;
      /deep/ tr {
        cursor: pointer;
      }
    }
    .bottom {
      text-align: right;
      padding: @content-padding-v 0px;
    }
  }
}
</style>