<template>
  <div>
    <a-form-item v-if="edit" 
      :label="property.label"
      :required="!!property.require" 
      :validateStatus="validateStatus"
    >
      <a-textarea v-if="property.multiline" 
        :autoSize="{ minRows: 4, maxRows: 12 }" 
        v-model="propValue"
        :placeholder="property.hint"
        :disabled="!!property.disable"
      />
      <a-input v-else
        v-model="propValue"
        :placeholder="property.hint"
        :disabled="!!property.disable"
      />
    </a-form-item>
    <div v-else class="p-showname">
      <span>{{property.label}}：</span>
      <span :title="propValue">{{propValue}}</span>
    </div>
  </div>
</template>
<script>
import { Form, Input } from "ant-design-vue";
import get from 'lodash/get';
import set from 'lodash/set';

export default {
  props: {
    property: {
      type: Object,
    },
    data:{
      type: Object,
    },
    edit:{
      type: Boolean,
      default: false,
    }
  },
  components: {
    AFormItem: Form.Item,
    AInput: Input,
    ATextarea: Input.TextArea,
  },
  data() {
    return {
      code: this.property['code'],
      validateStatus: undefined,
    };
  },
  computed:{
    propValue:{
      get(){
        return get(this.data, this.code);
      },
      set(value){
        set(this.data, this.code, value)
      }
    }
  },
  methods: {
    validateField(obj){
      return new Promise((resolve, reject) => {
        this.validate((error) => {
          if(error){
            reject(error);
          }else{
            set(obj, this.code, this.propValue)
            resolve();
          }
        })
      });
    },
    validate(callback){
      let status = undefined;//error 验证失败 success成功
      let error;
      if(!this.property.disable){
        //TODO 数据格式校验
        if(this.property.require && (!this.propValue && this.propValue !== 0)){
          status = 'error';
          error = `请填写${this.property.label || this.code}`;
        }else{
          //校验方式还未设计，先简单处理下
          if (this.property.code == 'usccode') {
            if (/^[a-zA-Z0-9]{18}$/.test(this.propValue) || this.propValue == '无') {
              status = 'success';
            } else {
              status = 'error';
              error = `${this.property.label || this.code}格式不正确`;
            }
          }else{
            status = 'success';
          }
        }
      }
      this.validateStatus = status;
      if(callback){
        callback(error);
      }
    },
    onChange(){
      this.validate();
    },
  }
};
</script>
<style lang="less" scoped>
.ant-form-item {
  margin-bottom: 0;
}
.p-showname {
  line-height: 30px;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
</style>