<template>
  <a-layout>
    <Contentlist
      @delete="this.delete"
      @save="save"
      :data="data"
      @sort="sort"
      @search="search"
    />
  </a-layout>
</template>

<script>
import { Layout } from "ant-design-vue";
import Contentlist from "./components/ContentList";
import {
  analysiscontentquery,
  analysiscontentsave,
  analysiscontentdel,
  analysiscontentorderby,
} from "@/person/api/statistics";
import { showError } from "@/framework/utils/index";
export default {
  components: {
    ALayout: Layout,
    Contentlist,
  },
  data() {
    return {
      data: [],
      id: 0,
    };
  },
  mounted() {
    this.id = this.$route.query.id;
    this.getDatabyId(this.id);
  },
  methods: {
    save(data) {
      if (data.id > 0) {
        //编辑
        analysiscontentsave({
          analyzeid: Number(this.id),
          id: data.id,
          name: data.name,
          pid: data.pid,
          form: data.form,
          data: data.data,
        })
          .then((res) => {
            this.getDatabyId(this.id);
          })
          .catch((error) => {
            showError(error);
          });
      } else {
        //新增
        analysiscontentsave({
          analyzeid: Number(this.id),
          name: data.name,
          pid: data.pid,
          form: data.form,
          data: data.data,
        })
          .then((res) => {
            this.getDatabyId(this.id);
          })
          .catch((error) => {
            showError(error);
          });
      }
    },
    delete(id) {
      analysiscontentdel(id)
        .then((res) => {
          this.getDatabyId(this.id);
        })
        .catch((error) => {
          showError(error);
        });
    },
    sort(data) {
      //调用排序方法
      analysiscontentorderby(data)
        .then((res) => {
          this.getDatabyId(this.id);
        })
        .catch((error) => {
          showError(error);
        });
    },
    search(keywords) {
      this.keywords = keywords;
      this.getDatabyId(this.id);
    },
    getDatabyId(id) {
      analysiscontentquery({ analyzeid: this.id, searchkey: this.keywords })
        .then((res) => {
          let tops = [],
            map = new Map(),
            expandedKeys = ["0"];
          (res.result || []).forEach((item) => {
            //content必须是按树的深度优先排序
            let parent = map.get(item.pid);
            let node = {
              key: item.id,
              title: item.name,
              value: item.id,
              scopedSlots: { title: "custom" },
            };
            if (parent) {
              let children = parent.children;
              if (!children) {
                parent.children = children = [];
                parent.key = "" + parent.key; //父节点key转化为字符区分
                expandedKeys.push(parent.key);
              }
              children.push(node);
            } else {
              tops.push(node);
            }
            map.set(item.id, node);
          });
          this.data = tops;
        })
        .catch((error) => {
          showError(error);
        });
    },
  },
};
</script>
<style lang="less" scoped>
.ant-layout {
  height: 100%;
  padding: @layout-space-base;
}
</style>