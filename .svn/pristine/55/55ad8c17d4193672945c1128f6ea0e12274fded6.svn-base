<template>
  <dialog-box 
    v-model="show"
    :title="(districtName || '') + title"
  >
    <div class="detail-info">
      <div class="header">
        <ul>
          <li>
            <div class="name">{{title}}</div>
            <lcd-font :length="4" :realNumber="num" :realStyle="{color: '#7dc8a3'}"/>
            <div class="tooltip">
              <div class="arrow"></div>
              <div class="content">{{field && field.name}}机构个数 {{orgcount}}</div>
            </div>
          </li>
          <li class="operater">=</li>
          <li>
            <div class="name">核定数</div>
            <lcd-font :length="4" :realNumber="total"/>
          </li>
          <li class="operater">-</li>
          <li>
            <div class="name">实有数</div>
            <lcd-font :length="4" :realNumber="used"/>
          </li>
        </ul>
      </div>
      <div class="body">
        <ul class="bar-chart">
          <li v-for="item in list" :key="item.k0">
            <div class="num">{{Math.max(item.v0 || 0, 0)}}</div>
            <div class="bar" @click="showOrgList(item)">
              <div :style="{
                height: getBarPercent(item.v0)
              }"></div>
            </div>
            <div class="label">{{item.k0}}</div>
          </li>
        </ul>
      </div>
    </div>
    <org-list v-model="orgList.show" :title="(districtName || '') + orgList.title" :loadPage="orgList.loader"/>
  </dialog-box>
</template>
<script>
import DialogBox from '../components/DialogBox'
import LcdFont from "../components/LcdFont";
import OrgList from '../components/OrgList'
import { mixins } from "../components/minxin";
import { chartBySystype, orgQuery } from "@/person-shaoxing/api/orgStaffReport";
import { showError } from "@/framework/utils/index";

export default {
  components: {
    DialogBox, LcdFont, OrgList
  },
  mixins: [mixins],
  props: {
    value: Boolean,
    title: String,
    total: {
      type: Number,
      default: 0
    },
    used: {
      type: Number,
      default: 0
    },
    unittypes: Array,
    field: Object,
  },
  data(){
    return {
      show: this.value,
      orgcount: 0,
      list: [],
      orgList: {
        show: false,
        title: '',
        params: {}
      }
    }
  },
  computed: {
    num(){
      if(this.total >= 0 && this.used >= 0){
        return this.total - this.used;
      }
      return 0;
    },
    maxNum(){
      let num = 0;
      this.list.forEach((item) => {
        if(item.v0 > 0 && num < item.v0){
          num = item.v0;
        }
      });
      return num
    },
    params(){
      return {
        district: this.dictId,
        unittypes: this.unittypes,
        field: this.field,
      }
    },
    systypes(){
      return this.$store.getters.dict('usermanage.org.systype')  || [];
    }
  },
  watch: {
    value(value){
      this.show = value;
    },
    show(show){
      this.$emit('input', show);
    },
    params:{
      immediate: true,
      handler(p){
        if(p.field && this.show){
          this.loadDetail(p);
        }
      }
    }
  },
  methods: {
    showOrgList(item){
      this.orgList = {
        show: true,
        title: `${this.field && this.field.name}机构列表（${item.k0}）`,
        loader: (page) => {
          let { district, unittypes, field } = this.params;
          let systype = this.systypes.find(t => t.text == item.k0);
          if(!systype){
            return Promise.reject({code: 'ui_error', message: '系统类别错误'});
          }
          return orgQuery({
            district, unittypes,
            filters: [
              { field: "systype", op: "eq", value: systype.value },
              { field: "_id@organization.statistic." + field.code, op: "gt", value: 0 }
            ],
            ...page,
          })
        }
      }
    },
    getBarPercent(num){
      if(this.maxNum > 0){
        num = Math.max(num || 0, 0);
        return `${100 - (num * 100/this.maxNum).toFixed(2)}%`
      }
      return "100%"
    },
    loadDetail({district, unittypes, field}){
      let criteria = [
        { field: { key: "unittype" }, op: "in", value: unittypes },
        { field: { key: "_id@organization.statistic." + field.code }, op: "gt", value: 0 },
      ];
      if(district){
        criteria.push({ field: { key: "district" }, op: "eq", value: district });
      }
      //查询空编/空职数（指定字段值大于0的机构）
      orgQuery({
        district, unittypes,
        filters: [{ field: "_id@organization.statistic." + field.code, op: "gt", value: 0 }],
        pagesize: 0, //页面大小为0 只查询条数
        needtotal: true,
      }).then(({result}) => {
        this.orgcount = result.total;
      }).catch((error) => {
        showError(error);
      });
      /** 按系统类别统计字段的和 */
      chartBySystype(
        district, unittypes, [field]
      ).then(({result: {data}}) => {
        this.list = data.rows;
      })
    }
  }
}
</script>
<style lang="less" scoped>
.detail-info{
  height: 600px;
  overflow: hidden;
  & > .header{
    text-align: center;
    margin-top: 90px;
    height: 170px;
    ul{
      overflow: hidden;
      .operater{
        padding: 0 20px;
        color: #8fc7ff;
        line-height: 56px;
        vertical-align: bottom;
        font-size: 30px;
        font-weight: bold;
      }
      li{
        display: inline-block;
        .name{
          color: white;
          text-align: center;
          line-height: 1.6em;
          font-size: 16px;
        }
      }
      .tooltip{
        position: absolute;
        margin-left: -36px;
        & > .arrow{
          width: 0;
          border-left: 8px solid;
          border-right: 8px solid;
          border-bottom: 5px solid #151920;
          margin: auto;
        }
        & > .content{
          padding: 15px 20px 15px 50px;
          color: white;
          background-color: #151920;
          background-image: url("../img/jigou.png");
          background-repeat: no-repeat;
          background-position: 15px 15px;
          border-radius: 5px;
          font-size: 16px;
        }
      }
    }
  }
  & > .body{
    .bar-chart{
      display: flex;
      justify-content: center;
      li{
        width: 74px;
        padding: 4px;
        text-align: center;
        .num{
          color: #7dc8a3;
          font-size: 18px;
          font-weight: bold;
        }
        .bar{
          width: 16px;
          height: 160px;
          background: linear-gradient(to top, #96f44e, #57f5e6 66%, #7dc8a3);
          margin: auto;
          position: relative;
          cursor: pointer;
          & > div{
            background-color: #343434;
          }
        }
        .label{
          color: white;
          font-size: 16px;
        }
      }
    }
  }
}
</style>