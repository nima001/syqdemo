<template>
	<a-layout>
		<chart-console v-model="chart" @input="onSave"/>
	</a-layout>
</template>
<script>
import { Layout } from 'ant-design-vue'
import ChartConsole from './ChartConsole';
import { closeWindowDelay } from '@framework/utils'
import { getChart, saveChart } from '@person/api/chart';
import { showError } from '@framework/utils';

export default {
	components:{
		ALayout: Layout,
		ChartConsole,
	},
	data(){
		return {
			chart: undefined,
			callback: undefined,
		}
	},
	created(){
		let { id, feedback } = this.$route.query;
		if(feedback && window.opener){//需要返回保存信息
			let { type, data, callback } = window.opener.paramsBridge;
			if(type == 'chart'){
				this.callback = callback;
				this.initData(data);
				return;
			}
		}
		this.initData({id});
	},
	methods: {
		async initData(chart = {}){
			if(chart.id){
				try {
					let { result } = await getChart(chart.id);	
					chart = Object.assign(result, chart);
				} catch (error) {
					showError(error);
				}
			}
			this.chart = chart;
		},
		onSave(chart){
			if(!chart.namespace){
				chart.namespace = 'customchart';
			}
			saveChart(chart).then(({result}) => {
				this.chart.id = result;//设置ID，防止新增时多次点击保存，重复创建数据
				this.doCallback(this.chart)
				this.$message.success('保存成功');
			}).catch(error => {
				showError(error);
			});
		},
		doCallback(chart){
			if(typeof(this.callback) == 'function'){
				try{
					let rt = this.callback(chart);
					if(rt === true){
						closeWindowDelay(3, '保存成功');
						return;
					}
				}catch(e){
					//ignore
				}
			}
		}
	}
}
</script>
<style lang="less" scoped>
.ant-layout{
	height: 100%;
	padding: @layout-space-base;
}
</style>