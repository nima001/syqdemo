<!-- 管理中心首页 -->
<template>
  <div class="layout">
    <div class="content">
      <div class="top">
        <div class="left">
          <a-button v-if="hasPermit('/dev/manage/app/create')" icon="plus" @click="()=> creatvisible = true" type="primary">创建应用</a-button>
          <a-button v-if="hasPermit('/dev/manage/app/receive')" @click="()=>receivevisible = true" type="primary">接收转让</a-button>
        </div>
        <div class="right">
          <a-select
            v-model="query.state"
            allowClear
            placeholder="请选择状态"
            :style="{width:'200px'}"
            @change="getList"
          >
            <a-select-option :value="item.value" v-for="(item,index) in stateList" :key="index">{{item.name}}</a-select-option>
          </a-select>
          <a-input
            allowClear
            :style="{width:'200px',margin:'0px 8px'}"
            v-model="query.name"
            placeholder="请输入名称"
          />
          <a-button @click="getList" type="primary" style="margin-right:8px">搜索</a-button>
          <a-button @click="reset">重置</a-button>
        </div>
      </div>
      <div class="middle">
        <a-table :columns="columns" rowKey="id" :dataSource="pagination.rows" :pagination="false" :loading="loading" >
          <span slot="statevalue" slot-scope="value,record">
            <span :style="colors(value)">{{verifyAppState(record)}}</span>
          </span>
          <span slot="action" slot-scope="text, record">
            <template v-if="(record.state != 5)">
            <a v-if="hasPermit('/dev/manage/app')" @click="appmanage(record)">管理</a>
            <template v-if="(record.state != 2)">
              <a
                v-if="hasPermit('/dev/manage/app/transfer') && record.state != 3 && record.state != 4"
                :style="{marginLeft:'8px'}"
                @click="showtransfermodal(record)"
              >转让</a>
              <a
                v-if="hasPermit('/dev/manage/app/transfer') && (record.state == 3 || record.state == 4)"
                :style="{marginLeft:'8px'}"
                @click="showtransferinfomodal(record)"
              >转让</a>
              <a
                v-if="hasPermit('/dev/manage/app/logout')"
                :style="{marginLeft:'8px'}"
                @click="showLogoffModal(record)"
              >注销</a>
            </template>
            </template>
          </span>
        </a-table>
      </div>
      <div class="bottom">
        <a-pagination
          v-if="pagination.rows.length > 0"
          :total="pagination.total"
          :showSizeChanger="true"
          @showSizeChange="onShowSizeChange"
          :pageSize="pagination.pagesize"
          v-model="pagination.pagenum"
          @change="onPageChange"
          :showTotal="(total) => `总共：${total}条`"
        />
      </div>
    </div>
    <!--接收转让-->
    <recive-transfer-code :receivevisible="receivevisible" @callBack='reciveCallback'/>
    <!--注销-->
    <log-off v-if="logoutvisible" :record="record" @callBack="logOffCallBack"/>
    <!-- 创建应用弹窗 -->
    <app-create v-model="creatvisible" />
    <!-- 转让弹窗 -->
    <app-transfer v-if="transfervisible" :record="record" @callBack="transferCallBack"/>
    <!-- 转让信息弹窗 -->
    <app-transfer-info v-if="transferinfovisible" :record="record" @callBack="transferInfoCallBack"/>
  </div>
</template>
<script>
import {Select,Table,Button,Input, notification, Pagination, Modal} from "ant-design-vue";
import { applist, generateTransfercode, receive, logout } from "@/dev/api/app";
import { showError } from "@/framework/utils";
import AppTransfer from "./components/AppTransfer";
import AppTransferInfo from "./components/AppTransferInfo";
import AppCreate from "./components/AppCreate";
import ReciveTransferCode from './components/ReciveTransferCode';
import LogOff from './components/LogOff';
export default {
  data() {
    return {
      columns: [
        {
          title: "序号",
          customRender: (text, record, index) => index + 1,
          width:'8%'
        },
        {
          title: "应用名称",
          dataIndex: "name",
          key: "name",
          width:'20%'
        },
        {
          title: "厂商",
          dataIndex: "devCompany",
          key: "devCompany",
          width:'42%'
        },
        {
          title: "状态",
          dataIndex: "state",
          key: "state",
          scopedSlots: { customRender: "statevalue" },
          width:'16%'
        },
        {
          title: "操作",
          key: "action",
          dataIndex: "action",
          scopedSlots: { customRender: "action" },
          width: "14%"
        }
      ],
      stateList:[
        {name:'在用',value:0},
        {name:'挂起',value:1},
        {name:'注销',value:2},
        {name:'待接收',value:3},
        {name:'转让待确认',value:4}
      ],
      loading:false,
      query:{
        name : undefined,
        state : undefined
      },
      pagination: {
        pagenum: 1,
        pagesize: 20,
        total: 0,
        needtotal:true,
        rows: []
      },
      record:{},
      receivevisible: false,
      logoutvisible: false,
      creatvisible: false,
      transfervisible: false,
      transferinfovisible: false
    };
  },
  components: {
    ASelect: Select,
    ASelectOption: Select.Option,
    ATable: Table,
    AButton: Button,
    AInput: Input,
    AInputGroup: Input.Group,
    notification,
    APagination: Pagination,
    AModal: Modal,
    AppTransfer,
    AppTransferInfo,
    AppCreate,
    ReciveTransferCode,
    LogOff
  },
  created() {
    this.getList();
  },
  methods: {
    // 接收转让
    reciveCallback(res){
      if(res.type == 'ok'){
        this.getList()
      }
      this.receivevisible = false;
    },
    // 管理应用
    appmanage(record) {
      this.$store.commit("appInfo_change", record);
      this.$router.push({path: "/dev/manage/app",query:{id:record.id}});
    },
    // 展示转让页面
    showtransfermodal(record) {
      this.record = record
      this.transfervisible = true;
    },
    //关闭转让页面
    transferCallBack(res) {
      if(res.type == 'ok'){
        this.getList();
      }
      this.transfervisible = false;
    },
    //展示转让信息页面
    showtransferinfomodal(record) {
      this.record = record;
      this.transferinfovisible = true;
    },
    // 关闭转让信息页面
    transferInfoCallBack(res) {
      if(res.type == 'ok'){
        this.getList();
      }
      this.transferinfovisible = false;
    },
    //注销应用
    logOffCallBack(res){
      if(res.type  == 'ok'){
        this.getList()
      }
      this.logoutvisible = false;
    },
    showLogoffModal(record) {
      this.record = record;
      this.logoutvisible = true;
    },
    onShowSizeChange(current, size) {
      this.pagination.pagenum = current;
      this.pagination.pagesize = size;
      this.getList();
    },
    // 分页数据
    getList() {
      this.loading = true;
      applist({...this.query,...this.pagination})
        .then(res => {
          let {pagenum,pagesize,rows,total} = res.result;
          this.pagination.pagenum = pagenum;
          this.pagination.pagesize = pagesize;
          this.pagination.rows = rows||[];
          this.pagination.total = total;
        })
        .catch(err => {
          showError(err);
        }).finally(()=>{
          this.loading = false;
        });
    },
    // 分页
    onPageChange(current,ss) {
      this.pagination.pagenum = current;
      this.getList();
    },
    // 重置
    reset() {
      this.query = {};
      this.pagination= {
        pagenum: 1,
        pagesize: 10,
        total: 0,
        needtotal:true,
        rows: []
      },
      this.getList();
    },
    colors(state) {
      switch (state) {
        case 1:
          return "color:#faad14";
        case 2:
          return "color:#999";
        case 3:
          return "color:#faad14";
        case 4:
          return "color:#faad14";
        case 5:
          return "color:#faad14";
        default:
          return;
      }
    },
    verifyAppState(record) {
      let str = "";
      switch (record.state) {
        case 0:
          str += "在用";
          break;
        case 1:
          str += "挂起(" + record.suspendDesc + ")";
          break;
        case 2:
          str += "注销";
          break;
        case 3:
          str += "待接收";
          break;
        case 4:
          str += "转让待确认";
          break;
        case 5:
          str += "接收待确认";
          break;
        default:
      }
      return str;
    }
  }
};
</script>
<style lang="less" scoped>
.layout {
  width: 100%;
  height: 100%;
  padding: @layout-space-base;
  .content {
    width: 100%;
    height: 100%;
    background: @white;
    padding: @content-padding-v @content-padding-h;
    display: flex;
    flex-direction: column;
    .top {
      display: flex;
      justify-content: space-between;
      padding: @content-padding-v 0px;
      .left {
        button {
          margin-left: @padding-xs;
        }
      }
    }
    .middle {
      padding: @content-padding-v 0px;
      flex-shrink: 1;
      overflow: auto;
    }
    .bottom {
      padding: @content-padding-v 0px;
      display: flex;
      justify-content: flex-end;
    }
  }
}
</style>
