<template>
  <div v-if="hasPermit('/person/qlsx/batch')">
    <a-form
      :form="this.form"
      :label-col="{ span: 7 }"
      :wrapper-col="{ span: 24 }"
      @submit="handleSubmit"
    >
      <a-form-item label="选择区域">
        <district :currValArrs.sync="currValArrs" :loading="this.loading"/>
      </a-form-item>
      <a-form-item label="对比事项">
        <batchqlsxselect :loading="this.loading" :codes.sync="codes"/>
      </a-form-item>
      <a-form-item class="btn" :wrapper-col="{ span: 24 }">
        <a-button type="primary" html-type="submit" :disabled="this.loading || !this.currValArrs.length || !this.codes.length" block>确定</a-button>
      </a-form-item>
    </a-form>
  </div>
</template>

<script>
import { Form, Button } from "ant-design-vue";
import district from "./district";
import { assign } from 'lodash';
import batchqlsxselect from "./batchqlsxselect";
export default {
  props: {
    loading: {
      type: Boolean,
    },
    pagination: {
      //分页
      type: Object,
    },
    columns: {
      //表头数据
      type: Array,
    },
  },
  components: {
    district,
    AForm: Form,
    AButton: Button,
    batchqlsxselect,
    AFormItem: Form.Item,
  },
  data() {
    return {
      codes: [],
      currValArrs: [],
      columnsdata: [],
      page: {
        needtotal: true,
        total: 0,
        pagenum: 1,
        pagesize: 10,
      },
      form: this.$form.createForm(this, { name: "batchform" }),
    };
  },
  mounted() {
    this.codes = [];
  },
  methods: {
    initcolumns() {
      this.columnsdata = [
        {
          title: "权力基本码",
          dataIndex: "quanlicode",
          key: "quanlicode",
        },
        {
          title: "权力事项名称",
          dataIndex: "name",
          key: "name",
        },
      ];
    },
    handleSubmit(e) {
      e.preventDefault();
      let districts = [];
      this.initcolumns();
      this.currValArrs.forEach((item) => {
        districts.push(item.value);
        this.columnsdata.push({
          title: item.text,
          dataIndex: `${item.value}`,
          key: `${item.value}`,
        });
      });
      assign( this.page, { districts: districts, codes: this.codes });
      this.$emit('update:columns', this.columnsdata);
      this.$emit('update:pagination', this.page);
      this.$emit('qlsxIncode', this.page );
    },
  },
};
</script>
<style scoped></style>
