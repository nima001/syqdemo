<template>
  <div>
    <dialog-box 
      v-model="show"
      :title="title"
    >
      <div class="detail-info">
        <div class="body">
          <ul class="bar-chart">
            <li v-for="item in data.rows" :key="item.k0">
              <div class="num">{{Math.max(item.v || 0, 0)}}</div>
              <div class="bar">
                <div :style="{
                  height: getBarPercent(item.v)
                }"></div>
              </div>
              <div class="label">{{item.k0}}</div>
            </li>
          </ul>
        </div>
      </div>
    </dialog-box>
  </div>
</template>
<script>
import DialogBox from '../components/DialogBox'
import LcdFont from "../components/LcdFont";
import { orgQuery } from "@/person-shaoxing/api/orgStaffReport";
import { aggregateQuery } from '@/person/api/chart'
import { showError } from "@/framework/utils/index";

export default {
  components: {
    DialogBox, LcdFont,
  },
  props: {
    value: Boolean,
    title: String,
    data: {
      type: Object,
      default: ()=>{
        return {};
      }
    }
  },
  data(){
    return {
      show: this.value,
    }
  },
  computed: {
    num(){
      if(this.total >= 0 && this.used >= 0){
        return this.total - this.used;
      }
      return 0;
    },
    maxNum(){
      let num = 0;
      if(this.data.rows){
        this.data.rows.forEach((item) => {
          if(item.v > 0 && num < item.v){
            num = item.v;
          }
        });
      }
      return num
    },
  },
  watch: {
    value(value){
      this.show = value;
    },
    show(show){
      this.$emit('input', show);
    },
  },
  methods: {
    getBarPercent(num){
      if(this.maxNum > 0){
        num = Math.max(num || 0, 0);
        return `${100 - (num * 100/this.maxNum).toFixed(2)}%`
      }
      return "100%"
    },
  }
}
</script>
<style lang="less" scoped>
.detail-info{
  height: 90%;
  & > .body{
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    .bar-chart{
      display: flex;
      justify-content: center;
      li{
        width: 74px;
        padding: 4px;
        text-align: center;
        .num{
          margin-bottom: @padding-md;
          color: #01E3FC;
          font-size: 25px;
          font-weight: bold;
        }
        .bar{
          width: 18px;
          height: 250px;
          background: linear-gradient(to top, #373FCB, #8672DD);
          margin: auto;
          position: relative;
          cursor: pointer;
          & > div{
            background-color: #343434;
          }
          &::before {
            content: '';
            position: absolute;
            top: -10px;
            left: -20px;
            right: -20px;
            bottom: 0;
            background: linear-gradient(to top, fade(#383FCC, 20%), fade(#8773DD, 20%));
          }
        }
        .label{
          margin-top: 10px;
          color: fade(#fff, 80%);
          font-size: 16px;
        }
      }
    }
  }
}
</style>