<template>
<div v-if="locationData">
  <a-form-item v-if="formLayout != 'horizontal'" :label="name" :required="!!required" :validateStatus="validateStatus">
    <a-tooltip placement="topLeft" :title="help">
      <div :class="{notEditor:!editor}">
        <dict-select :dict="dict" :disabled="!!disabled" :allowClear="!required" v-model="propValue"/>
      </div>
    </a-tooltip>
  </a-form-item>
  <a-form-item v-else :required="!!required" :validateStatus="validateStatus">
      <div class="compact">
        <div class="title" :title="name" :class="{required}">{{name}}</div>
        <a-tooltip placement="topLeft" :title="help">
          <div class="wrap" :class="{notEditor:!editor}">
            <dict-select :style="{width:'100%'}" :dict="dict" :disabled="!!disabled" :allowClear="!required" v-model="propValue"/>
          </div>
        </a-tooltip>
      </div>
  </a-form-item>  
</div>
</template>
<script>
import { Form, Input } from "ant-design-vue";
import DictSelect from "@/framework/components/DictSelect";
import { mixins } from '@formdesign/views/mixin/index';
import {get} from 'loadsh';
export default {
  title: '字典选择',
  props: {
    dict: {
      type: String
    },
    // location配置转关联 {location:{code:'',label:''}}
    location: {
      type: Object
    },
    filter: {
      type: Array
    }
  },
  mixins:[mixins],
  computed:{
    locationData(){
      if (this.location) {
        if (this.data) {
          return get(this.data, this.location.code);
        } else {
          return get(this.formData.data, this.location.code);
        }
      }else{
        return true
      }
    }
  },
  components: {
    AFormItem: Form.Item,
    AInput: Input,
    DictSelect
  },
  methods: {
    itemFilter(item){
      if(this.filter){
        return this.filter.indexOf(item.value) >= 0;
      }
      return true;
    }
  }
}
</script>
<style lang="less" scoped>
.ant-form-item {
  margin-bottom: 0;
  /deep/ .ant-form-item-required::before{
    color: @error-color;
  }
  .notEditor{
    position: relative;
    &::before{
      content: '';
      position: absolute;
      left: 0px;
      top: 0px;
      width: 100%;
      height: 100%;
      z-index: 3;
      cursor: not-allowed;
    }
    &:hover /deep/.ant-input{
      border-color: @border-color-base;
    }
  }  
  .compact {
    display: flex;
    padding: 4px 0px;
    .title {
      min-width: 5em;
      max-width: 10em;
      text-align: left;
      box-sizing: content-box;
      padding: 0px 11px;
      height: 30px;
      line-height: 30px;
      color: rgba(0, 0, 0, 0.75);
      font-size: 14px;
      background-color: #fafafa;
      border: 1px solid #d9d9d9;
      border-radius: 4px;
      border-right: none;
      border-top-right-radius: 0px;
      border-bottom-right-radius: 0px;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      &.required{
        position: relative;
        &::before{
          display: inline-block;
          color:@primary-color;
          font-size: 14px;
          font-family: SimSun, sans-serif;
          line-height: 1;
          content: '*';
          position: absolute;
          left:2px;
          top: 50%;
          transform: translateY(-50%)
        }        
      }
    }
    .wrap{
      flex: 1;
      height: 32px;
      line-height: 32px;
      min-width: 0px;
    }
    /deep/ .ant-select-selection {
      width: 100%;
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
    }
  }  
}
</style>