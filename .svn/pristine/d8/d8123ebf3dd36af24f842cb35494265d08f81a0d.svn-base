<template>
  <div class="add-report">
    <a-form class="report-form" :form="form">
      <a-form-item label="选择单位">
        <a-input
          v-decorator="['orgid', 
            { rules: [{ required: false, message: '请选择分类'}],
          }]"
            :read-only="true"
            placeholder="请选择机构"
            @click="showOrgSelect"
          >
          <a-icon slot="addonAfter" type="select" @click="showOrgSelect"/>
        </a-input>
      </a-form-item>
      <a-form-item label="分类">
        <a-select
          v-decorator="['type', 
            { rules: [{ required: false, message: '请选择分类'}],
          }]"
          >
          <a-select-option value="home">机构设置</a-select-option>
          <a-select-option value="xiaocezi2">编制调整</a-select-option>
          <a-select-option value="report">职数调整</a-select-option>
          <a-select-option value="aa">职责调整</a-select-option>
        </a-select>
      </a-form-item>
    </a-form>
    <!-- 机构选择弹框 -->
    <div class="modal">
      <a-modal
        :footer="null"
        v-model="orgvisible"
        :width="500"
        title="选择单位"
        :bodyStyle="{ height: '600px', padding: '0'}"
      >
        <org-user-select mode="org" 
          @finish="orgOk" 
        />
      </a-modal>
    </div>
  </div>
</template>
<script>
import { Input, Icon, Form, Select, Modal } from "ant-design-vue";
import OrgUserSelect from "@/framework/components/OrgUserSelect";
export default {
  name: 'addReport',
  components: {
    AForm: Form,
    AFormItem: Form.Item,
    ASelect: Select,
    ASelectOption: Select.Option,
    AIcon: Icon,
    AInput: Input,
    AModal: Modal,
    OrgUserSelect
  },
  beforeCreate() {
    this.form = this.$form.createForm(this);
  },
  data() {
    return {
      orgvisible: false
    }
  },
  methods: {
    getFormValue(){
      return new Promise((resolve, reject) => {
        this.form.validateFields((error, values) => {
          if(error){
            reject({code:'form_validate_fail', message: '表单验证失败'});
          }else{
            resolve(values);
          }
        })
      })
    },
    showOrgSelect() {
      this.orgvisible = true;
    },
    orgOk(type, list) {
      this.orgvisible = false;
      // if(type == "ok" && list.length > 0) {
      //   this.orgValue = list[0];
      // } 
    },
  }
}
</script>
<style lang="less" scoped>
.add-report{
  height: 100%;
  display: flex;
  flex-direction: column;
  .report-form{
    flex: auto;
    min-height: 0;
    overflow: auto;
    padding: @content-padding-v @content-padding-h;
  }
}
</style>