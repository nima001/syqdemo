<template>
  <a-spin :spinning="loading">
    <div class="donut">
      <div ref="stackedBarChartContainer">
      </div>
    </div>
  </a-spin>
</template>
<script>
import { Spin } from "ant-design-vue";
import { StackedBar } from '@antv/g2plot';
import { dataqualityList } from "@/person-shaoxing/api/monitor";
import { showError } from "@/framework/utils/index";
export default {
  name: 'StackedBarChart',
  components: {
    ASpin: Spin
  },
  props: {
    district: {
      type: String,
      defalut: undefined
    },
    title: {
      type: String
    }
  },
  watch: {
    district: {
      handler() {
        this.getData();
      },
      immediate: true
    }
  },
  data() {
    return {
      isCreated: false,
      stackBarPlot: null,
      loading: false
    }
  },
  created() {
  },
  mounted() {
  },
  methods: {
    getData() {
      this.loading = true;
      let district = JSON.stringify({
        district: this.district
      });
      let groupbyorgfield = this.district ? 'systype' : 'district';
      let params = {
        orgquery: district,
        querytype: 2,
        groupbyorgfield
      };
      dataqualityList(params)
      .then(({result}) => {
        this.loading = false;
        this.data = result;
        if(this.isCreated) {
          this.stackBarPlot.updateConfig({
            title: {
              text: `${this.title}问题总数`,
            },
            data: result
          })
          this.stackBarPlot.render();
        }else{
          this.stackBarInit(result);
          this.isCreated = true;
        }
      })
      .catch(err => {
        this.loading = false;
        showError(err);
      })
    },
    areaCity(key){
      let d = this.$store.getters.dictKey("usermanage.org.district", key);
      return (d && d.text) || '';
    },
    area(key){
      let d = this.$store.getters.dictKey("usermanage.org.systype", key);
      return (d && d.text) || '';
    },
    stackBarInit(data) {
      this.stackBarPlot = new StackedBar(this.$refs.stackedBarChartContainer, {
        height: 800,
        forceFit: true,
        title: {
          visible: true,
          text: `${this.title}问题总数`,
          alignTo: 'middle'
        },
        data,
        yField: 'xname',
        xField: 'value',
        meta: {// 坐标轴处理
          xname: {
            alias: 'xname',
            formatter:(v)=>{
              if(this.district) {
                return this.area(v);
              }else{
                return this.areaCity(v);
              }
            }
          }
        },
        xAxis: {
          visible: true,
          line: {
            visible: true,
            // style: {
            //   offsetY: '100px'
            // }
          },
          title: {
            visible: false
          },
        },
        yAxis: {
          visible: true,
          line: {
            visible: true
          }
        },
        label: {
          visible: true,
          // formatter: (v) => Math.round(v / 10000) + '万',
        },
        legend: {
          position: 'bottom-center'
        },
        color: ['#D15456', '#5488D1'],
        stackField: 'fieldname',
      });

      this.stackBarPlot.render();
    },
  }
}
</script>
<style lang="less" scoped>

</style>