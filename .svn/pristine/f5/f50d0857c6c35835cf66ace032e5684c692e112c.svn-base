<template>
  <div class="donut">
    <div ref="container">
    </div>
  </div>
</template>
<script>
import { Donut } from '@antv/g2plot';
import { problemmonitorCount } from "@/person-shaoxing/api/monitor";
import { showError } from "@/framework/utils/index";
export default {
  props: {
    areatype: {
      type: Number,
      defalut: undefined
    },
    handlestatus: {
      type: Number
    },
    title: {
      type: String
    }
  },
  name: 'Donut',
  watch: {
    areatype: {
      handler(val) {
        this.getData();
      },
      immediate: true
    }
  },
  data() {
    return {
      donutPlot: null,
      isCreated: false
    }
  },
  created() {
  },
  mounted() {
  },
  methods: {
    getData() {
      let params = {
        areatype: this.areatype,
        handlestatus: this.handlestatus,
        querytype: 1
      };
      problemmonitorCount(params)
      .then(({result}) => {
        if(this.isCreated) {
          this.donutPlot.destroy();
          // this.donutPlot.updateConfig({
          //   data: result,
          //   title: {
          //     text: 'aa'
          //   }
          // });
          // this.donutPlot.render();
          this.donutInit(result);
        }else{
          this.donutInit(result);
          this.isCreated = true;
        }
      })
      .catch(err => {
        showError(err);
      })
    },
    systype(key){
      let d = this.$store.getters.dictKey("usermanage.org.systype", key);
      return d && d.text;
    },
    donutInit(data) {
      this.donutPlot = new Donut(this.$refs.container, {
        forceFit: true,
        title: {
          visible: true,
          text: `${this.title}问题总数分类情况`,
          alignTo: 'middle'
        },
        legend: {
          visible: true,
          text: {
            formatter: (v) => {
              return this.systype(v);
            },
          },
          position: 'bottom-center',
          marker: {
            symbol: 'square'
          },
        },
        // description: {
        //   visible: true,
        //   text: '环图的外半径决定环图的大小，而内半径决定环图的厚度。',
        // },
        radius: 0.8,
        padding: 'auto',
        data,
        angleField: 'value',
        colorField: 'fieldname',
        color: ['#D15456', '#5488D1', '#D1BF3D', '#D48265'],
        statistic: {
          visible: true,
          // content: {
          //   value: '32%',
          //   name: 'Texi & delivery',
          // },
        },
      });

      // this.donutPlot.on('axis-label:click', (...args) => {
      //   console.log(...args);
      // });

      this.donutPlot.render();

      // this.donutPlot.onPlotMouseenter = function(e) {
      //   console.log(11)
      // }
    }
  }
}
</script>
<style lang="less" scoped>

</style>