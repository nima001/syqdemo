<template>
  <div class="layout">
    <div class="content-left">
      <org-tree
        class="org-tree"
        slot="nav"
        @select="onOrgSelect"
        :nodeid="nodeid"
        :treeid="treeid"
      />
    </div>
    <div class="content-right">
      <div class="top">
        <div class="top-left">
          <a-button type="primary" @click="schedueModal = true">值班排班</a-button>
        </div>
        <div class="top-right">
          <a-range-picker :style="{width:'200px',margin:'0px 10px'}" @change="dateChange"></a-range-picker>
          <a-input-search
            placeholder="请输入人员姓名"
            :style="{width:'200px'}"
            enter-button
            @search="inputSearch"
          ></a-input-search>
        </div>
      </div>
      <div class="middle">
        <a-table
          rowKey="id"
          :loading="loading"
          :columns="columns"
          :data-source="dataSource"
          :pagination="false"
          :customRow="customRow"
        >
          <template slot="operate" slot-scope="record">
            <a @click.stop="schedueModal = true">编辑</a>
            <a :style="{marginLeft:'10px'}" @click.stop="()=>{}">删除</a>
          </template>
        </a-table>
      </div>
      <div class="bottom">
        <a-pagination
          show-size-changer
          :total="pagination.total"
          :page-size="pagination.pagesize"
          :default-current="pagination.pagenum"
          :show-total="(total) => `共 ${total} 条`"
          @change="onChange"
          @showSizeChange="onShowSizeChange"
        ></a-pagination>
      </div>
    </div>
    <schedue-form v-if="schedueModal" v-model="schedueModal"></schedue-form>
  </div>
</template>
<script>
import {
  DatePicker,
  Input,
  Table,
  Pagination,
  Select,
  Button
} from "ant-design-vue";
import { assign, cloneDeep } from "lodash";
import OrgTree from "@/hall/components/OrgTree";
import SchedueForm from "./SchedueForm";
import AccordionLayout from "@/framework/components/AccordionLayout";
import { showError } from "@/framework/utils/index";
export default {
  components: {
    ARangePicker:DatePicker.RangePicker,
    ASelect: Select,
    ASelectOption: Select.Option,
    ATable: Table,
    APagination: Pagination,
    AInputSearch: Input.Search,
    OrgTree,
    AccordionLayout,
    AButton: Button,
    SchedueForm
  },
  data() {
    return {
      schedueModal: false,
      nodeid: undefined,
      treeid: undefined,
      loading: false,
      dataSource: [{ id: 1, orgname: "公安窗口" }],
      query: {
        type: 1
      },
      pagination: {
        pagesize: 10,
        pagenum: 1,
        total: 0,
        needtotal: true
      }
    };
  },
  computed: {
    columns() {
      return [
        {
          title: "值班日期",
          dataIndex: "date"
        },
        {
          title: "星期",
          dataIndex: "week"
        },
        {
          title: "所在组织",
          dataIndex: "orgname"
        },
        {
          title: "开始时间",
          dataIndex: "starttime"
        },
        {
          title: "结束时间",
          dataIndex: "endtime"
        },
        {
          title: "排班人",
          dataIndex: "orders"
        },
        {
          title: "人员",
          dataIndex: "people"
        },
        {
          title: "操作",
          dataIndex: "operate",
          scopedSlots: { customRender: "operate" }
        }
      ];
    }
  },

  methods: {
    onOrgSelect() {},
    dateChange() {},
    selectChange() {},
    inputSearch() {},
    customRow(row, index) {
      return {
        on: {
          click: () => {
            this.schedueModal = true;
          }
        }
      };
    },
    dictRender(key, attr) {
      return (text, row, index) => {
        let v = this.$store.getters.dictKey(key || row[attr], text);
        text = (v && v.text) || "";
        return <span title={text}>{text}</span>;
      };
    },
    onChange(pagenum, pagesize) {
      assign(this.pagination, { pagesize, pagenum });
    },
    onShowSizeChange(current, pagesize) {
      assign(this.pagination, { pagenum: 1, pagesize });
    }
  }
};
</script>
<style lang='less' scoped>
.layout {
  width: 100%;
  height: 100%;
  display: flex;
  .content-left {
    width: 310px;
    background: @white;
    border-radius: @border-radius-base;
  }
  .content-right {
    flex: 1;
    padding: @content-padding-v @content-padding-h;
    overflow-y: auto;
    min-height: 0px;
    background: @white;
    display: flex;
    flex-direction: column;
    border-radius: @border-radius-base;
    margin-left: @layout-space-base;
    .top {
      display: flex;
      padding: @content-padding-v 0px;
      justify-content: space-between;
    }
    .middle {
      flex-shrink: 1;
      padding: @content-padding-v 0px;
      overflow-y: auto;
      /deep/ tr {
        cursor: pointer;
      }
    }
    .bottom {
      text-align: right;
      padding: @content-padding-v 0px;
    }
  }
}
</style>