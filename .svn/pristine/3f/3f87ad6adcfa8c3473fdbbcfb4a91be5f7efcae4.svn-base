<template>
  <a-layout>

    <a-layout-content class="content">
      <a-spin :spinning='loading'>
        <a-row :gutter="16" v-if="recordList.length != 0">
          <a-col
            class="col"
            v-for="item in recordList"
            :key="item.id"
            @click="jump(item)"
            :xs="{span: 12}"
            :sm="{span:8}"
            :md="{span:8}"
            :lg="{ span: 6}"
            :xl="{span:4}"
            :xxl="{span:4}"
            
          >
            <div class="colwrap">
              <span class="title">{{item.title}}</span>
              <span class="arrow">
                <a-icon type="right" />
              </span>
              <span class="close-icon" @click.stop="delQueryById(item)">
                <a-icon type="close" v-if="item.owner || item.pub != 1" />
              </span>
            </div>
          </a-col>
        </a-row>
        <div class="nodata"  v-if="recordList.length == 0 && !loading">
          <empty-data></empty-data>
        </div>
      </a-spin>
    </a-layout-content>

  </a-layout>
</template>
<script>
import { querylist, deletebyid } from "@/person/api/integratedquery";
import EmptyData from "@/framework/components/EmptyData";
import { showError } from "@/framework/utils/index";
import { Layout, Row, Col, Icon, Spin } from "ant-design-vue";
export default {
  name: "CommonQuery",
  data() {
    return {
      loading: true,
      recordList: [],
      query:undefined,
      pagenum:1,
      pagesize:84
    };
  },
  components: {
    ALayout: Layout,
    ALayoutContent: Layout.Content,
    ARow: Row,
    ACol: Col,
    AIcon: Icon,
    ASpin: Spin,
    EmptyData
  },
  created() {
    this.myQueryList();
  },
  methods: {
    // 跳转
    jump(item) {
      this.$router.push({
        path: "/person/integratedquery/index",
        query: { id: item.id }
      });
    },
    myQueryList() {
     /*  let data = {
        simple: null,
        system: null,
        searchkey: "",
        namespace: "customquery"
      }; */
      this.loading = true;
      this.recordList = [];
      this.query = undefined;
      this.query=this.createQuery();
      this.query.nextPage()
      
    },
    
    createQuery(){
      let params ={
        pagenum: 0,
        pagesize: this.pagesize,
        namespace: "customquery"
      };
      let nextList = true;
      return {
        hasNext:()=>{
          return nextList
        },
        nextPage:()=>{
          params.pagenum++;
          querylist(params).then(res =>{
            if(this.loading) {
              let list = res.result.rows || [];
                  this.recordList = [...this.recordList, ...list];
                  if (params.pagesize > list.length) {
                    nextList = false;
                  }
                  return list;
            }
          }).catch(error => {
          showError(error);
        }).finally(()=>{
          this.loading = false;
        });

        }
      }
    },
    /* onscroll(e){
      console.log(1);
       if (!this.loading && this.query && this.query.hasNext()) {
        if (
          e.target.scrollHeight - e.target.clientHeight - e.target.scrollTop <=
          5
        ) {
          this.loading = true;
          this.query.nextPage();
        }
      }

    }, */

    delQueryById(item) {
      deletebyid(item.id)
        .then(res => {
          this.recordList = this.recordList.filter(e => {
            return e.id != item.id;
          });
        })
        .catch(error => {
          showError(error);
        });
    }
  }
};
</script>
<style lang="less" scoped>
.ant-layout {
  height: 100%;
  .content {
    margin: @layout-space-base;
    background-color: @white;
    overflow-y: auto;
    overflow-x: hidden;
    .nodata {
      padding: 40px;
    }
    .ant-spin-spinning{
      display: block;
      margin:  100px auto 0;
    }
    .ant-row {
      padding: @content-padding-v @content-padding-h;
      .col {
        padding: @content-padding-v @content-padding-h;
        .colwrap {
          background: #f6f6f6;
          height: 50px;
          line-height: 50px;
          cursor: pointer;
          display: flex;
          align-items: center;
          position: relative;
          transition: all 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
          &:hover {
            box-shadow: 0 2px 2px rgba(0, 0, 0, 0.09);
            .close-icon {
              visibility: visible;
            }
          }
          .title {
            flex: 1;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            padding: 0px 2px 0px 25px;
            font-size: 15px;
          }
          .arrow {
            width: 25px;
            color: @accent-color;
          }
          .close-icon {
            width: 20px;
            height: 20px;
            display: block;
            position: absolute;
            left: 0px;
            top: 0px;
            text-align: center;
            line-height: 20px;
            visibility: hidden;
          }
        }
      }
    }
  }
}
</style>