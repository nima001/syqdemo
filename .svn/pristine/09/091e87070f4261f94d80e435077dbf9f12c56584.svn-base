<template>
  <li>
    {{value.showname}}{{measureTypeText}}
    <a-dropdown :trigger="['click']" overlayClassName="chat-console-axis-menu" :overlayStyle="{'min-width': '180px'}">
      <span><a-icon type="caret-down"/></span>
      <a-menu slot="overlay" @click="onMeasureMenuClick">
        <template v-if="value.type != 'count'">
          <a-menu-item key="sum" :class="{selected: value.type=='sum'}"><span class="icon">●</span>求和</a-menu-item>
          <a-menu-item key="avg" :class="{selected: value.type=='avg'}"><span class="icon">●</span>求平均</a-menu-item>
          <a-menu-divider/>
        </template>
        <a-menu-item key="remove"><a-icon type="delete"/>删除</a-menu-item>
      </a-menu>
    </a-dropdown>
  </li>
</template>
<script>
import { Modal, Icon, Dropdown, Menu } from 'ant-design-vue'

/**
 * 指标
 */
export default {
  components: {
    AModal: Modal,
    AIcon: Icon,
    ADropdown: Dropdown,
    AMenu: Menu,
    AMenuItem: Menu.Item,
    ASubMenu: Menu.SubMenu,
    AMenuDivider: Menu.Divider,
  },
  props: {
    value: {
      type: Object,
      required: true
    },
  },
  computed: {
    measureTypeText(){
      switch(this.value.type){
        case 'sum': return '(求和)';
        case 'avg': return '(求平均)';
      }
    },
  },
  methods: {
    onMeasureMenuClick(menu){
      if(menu.key == 'remove'){
        this.$emit('remove');
      }else if(this.value.type != 'count'){
        this.value.type = menu.key;
      }
    },
  }
}
</script>
<style lang="less" scoped>
.chat-console-axis-menu{
  .selected{
    color: @primary-color;
    & .icon{
      visibility: visible;
    }
  }
  .icon{
    visibility: hidden;
    display: inline-block;
    width: 14px;
    margin-right: 8px;
    text-align: center;
  }
  .icon.show{
    visibility: visible;
  }
}
</style>