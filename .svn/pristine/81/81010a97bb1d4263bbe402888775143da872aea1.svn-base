<template>
	<a-layout>
		<chart-console v-model="chart" :namespace="namespace" @input="onSave">
			<template v-slot:table="props">
				<DataTable v-bind="props"/>
			</template>
			<template v-slot:pie-chart="props">
				<PieChart v-bind="props"/>
			</template>
			<template v-slot:bar-chart="props">
				<BarChart v-bind="props"/>
			</template>
			<template v-slot:line-chart="props">
				<LineChart v-bind="props"/>
			</template>
		</chart-console>
	</a-layout>
</template>
<script>
import { Layout } from 'ant-design-vue'
import ChartConsole from './ChartConsole';
import { closeWindowDelay } from '@framework/utils'
import { getChart, saveChart } from '@person/api/chart';
import { showError } from '@framework/utils';

// import { components } from "@person/components/chart";//FIXME sunwen 异步导入无法手动创建slot，先手动导入
import DataTable from "./components/DataTable"
import PieChart from "@person/components/chart/PieChart"
import BarChart from "@person/components/chart/BarChart"
import LineChart from "@person/components/chart/LineChart"

export default {
	components:{
		ALayout: Layout,
		ChartConsole,
		// ...components,
		DataTable,
		PieChart, BarChart, LineChart,
	},
	data(){
		return {
			chart: undefined,
			callback: undefined,
			namespace: 'customquery',//默认常用查询
		}
	},
	created(){
		let { id, feedback } = this.$route.query;
		if(feedback && window.opener){//需要返回保存信息
			let { type, data, callback } = window.opener.paramsBridge;
			if(type == 'chart'){
				this.callback = callback;
				this.initData(data);
				return;
			}
		}
		this.initData({id});
	},
	methods: {
		async initData(chart = {}){
			if(chart.id){
				try {
					let { result } = await getChart(chart.id);	
					chart = Object.assign(result, chart);
				} catch (error) {
					showError(error);
				}
			}
			if(chart.namespace){
				this.namespace = chart.namespace;
			}
			this.chart = chart;
		},
		onSave(chart){
			saveChart(chart).then(({result}) => {
				this.chart.id = result;//设置ID，防止新增时多次点击保存，重复创建数据
				this.doCallback(this.chart)
				this.$message.success('保存成功');
			}).catch(error => {
				showError(error);
			});
		},
		doCallback(chart){
			if(typeof(this.callback) == 'function'){
				try{
					let rt = this.callback(chart);
					if(rt === true){
						closeWindowDelay(3, '保存成功');
						return;
					}
				}catch(e){
					//ignore
				}
			}
		}
	}
}
</script>
<style lang="less" scoped>
.ant-layout{
	height: 100%;
	padding: @layout-space-base;
}
</style>