<template>
  <div class="home-body">
    <div :class="['top',{'topEmpty':!this.topWidgets.length}]">
      <!--顶部置顶项开始-->
      <div slot="header" class="btn-group list-group-item" role="group" aria-label="Basic example" v-for="item in this.upTop" :key="item.id">
        <a-card class="widget" :title="item.name" :bodyStyle="{ padding: 0 }" :bordered="false">
          <div slot="extra" class="extra">
            <router-link class="more" :to="item.moreurl" v-if="item.moreurl">更多</router-link>
            <a-dropdown>
              <a class="ant-dropdown-link" @click="(e) => e.preventDefault()">
                <a-icon type="more" class="icon" />
              </a>
              <a-menu slot="overlay" @click="onClick($event, item)">
                <a-menu-item key="1" style="width: 100px; text-align: center">删除</a-menu-item>
              </a-menu>
            </a-dropdown>
          </div>
          <component :is="item.componenturi" :rowcount="item.rowcount" :class="{ isiframe: isiframe }"/>
          <!-- <div class="resize-handle" @mousedown.prevent="resizeHeight(item)"></div> -->
        </a-card>
      </div>
      <!--顶部置顶项结束-->
      <draggable
        :class="[{'dragTop':!this.topWidgets.length}]"
        :disabled="this.draggable"
        :force-fallback="true"
        :animation="200"
        v-model="topWidgets"
        :move="topmoveEnd"
        @end="dragEnd"
        ghostClass="ghostClass"
        handle=".ant-card-head"
        :group="{ name: 'menu', put: true }"
      >
        <!--顶部非置顶项开始-->
        <div v-for="w in topWidgets" :key="w.id" :class="{ 'retain': topWidgets.length === 1 && w.display === 2 }">
          <a-card class="widget" :title="w.name" :bodyStyle="{ padding: 0 }" :bordered="false" v-if="w.display !== 2">
            <div slot="extra" class="extra">
              <router-link class="more" :to="w.moreurl" v-if="w.moreurl">更多</router-link>
              <a-dropdown>
                <a class="ant-dropdown-link" @click="(e) => e.preventDefault()">
                  <a-icon type="more" class="icon" />
                </a>
                <a-menu slot="overlay" @click="onClick($event, w)">
                  <a-menu-item key="1" style="width: 100px; text-align: center">删除</a-menu-item>
                </a-menu>
              </a-dropdown>
            </div>
            <component :is="w.componenturi" :rowcount="w.rowcount" :style="{boxSizing: 'content-box' }"/>
            <!-- <div class="resize-handle" @mousedown.prevent="resizeHeight(w)" ></div> -->
          </a-card>
        </div>
        <!--顶部非置顶项结束-->
      </draggable>
    </div>
    <div class="content">
      <div class="left" :style="{ width: `${weightWidth}%` }">
        <!--左边置顶项开始-->
        <div slot="header" class="btn-group list-group-item" role="group" aria-label="Basic example" v-for="item in this.leftTop" :key="item.id">
          <a-card  class="widget" :title="item.name" :bodyStyle="{ padding: 0 }" :bordered="false">
            <div slot="extra" class="extra">
              <router-link class="more" :to="item.moreurl" v-if="item.moreurl">更多</router-link>
              <a-dropdown>
                <a class="ant-dropdown-link" @click="(e) => e.preventDefault()">
                  <a-icon type="more" class="icon" />
                </a>
                <a-menu slot="overlay" @click="onClick($event, item)">
                  <a-menu-item key="1" style="width: 100px; text-align: center">删除</a-menu-item>
                </a-menu>
              </a-dropdown>
            </div>
            <component :is="item.componenturi" :rowcount="item.rowcount" :class="{ isiframe: isiframe }"/>
            <!-- <div class="resize-handle" @mousedown.prevent="resizeHeight(item)"></div> -->
          </a-card>
        </div>
        <!--左边置顶项结束-->
        <draggable
          :class="[{'dragLeft':!this.leftWidgets.length}]"
          :disabled="this.draggable"
          :force-fallback="true"
          :animation="200"
          v-model="leftWidgets"
          :move="leftmoveEnd"
          @end="dragEnd"
          ghostClass="ghostClass"
          handle=".ant-card-head"
          :group="{ name: 'menu', put: true }"
        >
          <!--左边非置顶项开始-->
          <div v-for="w in leftWidgets" :key="w.id" :class="{ 'retain': leftWidgets.length === 1 && w.display === 2 }">
            <a-card class="widget" :title="w.name" :bodyStyle="{ padding: 0 }" :bordered="false" v-if="w.display !== 2">
              <div slot="extra" class="extra">
                <router-link class="more" :to="w.moreurl" v-if="w.moreurl">更多</router-link>
                <a-dropdown>
                  <a class="ant-dropdown-link" @click="(e) => e.preventDefault()">
                    <a-icon type="more" class="icon" />
                  </a>
                  <a-menu slot="overlay" @click="onClick($event, w)">
                    <a-menu-item key="1" style="width: 100px; text-align: center">删除</a-menu-item>
                  </a-menu>
                </a-dropdown>
              </div>
              <component :is="w.componenturi" :rowcount="w.rowcount" :class="{ isiframe: isiframe }"/>
              <!-- <div class="resize-handle" @mousedown.prevent="resizeHeight(w)"></div> -->
            </a-card>
          </div>
          <!--左边非置顶项结束-->
        </draggable>
        <div class="move-handle" @mousedown.prevent="drag()"></div>
      </div>
      <div class="right" :style="{ width: `${100 - weightWidth}%` }">
        <!--右边置顶项开始-->
        <div slot="header" class="btn-group list-group-item" role="group" aria-label="Basic example" v-for="item in this.rightTop" :key="item.id">
          <a-card class="widget" :title="item.name" :bodyStyle="{ padding: 0 }" :bordered="false">
            <div slot="extra" class="extra">
              <router-link class="more" :to="item.moreurl" v-if="item.moreurl">更多</router-link>
              <a-dropdown>
                <a class="ant-dropdown-link" @click="(e) => e.preventDefault()">
                  <a-icon type="more" class="icon" />
                </a>
                <a-menu slot="overlay" @click="onClick($event, item)">
                  <a-menu-item key="1" style="width: 100px; text-align: center">删除</a-menu-item>
                </a-menu>
              </a-dropdown>
            </div>
            <component :is="item.componenturi" :rowcount="item.rowcount" :class="{ isiframe: isiframe }"/>
            <!-- <div class="resize-handle" @mousedown.prevent="resizeHeight(item)"></div> -->
          </a-card>
        </div>
        <!--右边置顶项结束-->
        <draggable
          :class="[{'dragRight':!this.rightWidgets.length}]"
          :disabled="this.draggable"
          :force-fallback="true"
          :animation="200"
          v-model="rightWidgets"
          :move="rightmoveEnd"
          @end="dragEnd"
          ghostClass="ghostClass"
          :group="{ name: 'menu', put: true }"
        >
          <!--右边非置顶项开始-->
          <div v-for="w in rightWidgets" :key="w.id" :class="{ 'retain': rightWidgets.length === 1 && w.display === 2 }">
            <a-card class="widget" :title="w.name" :bodyStyle="{ padding: 0 }" :bordered="false" v-if="w.display !== 2">
              <div slot="extra" class="extra">
                <router-link :to="w.moreurl" v-if="w.moreurl">更多</router-link>
                <a-dropdown>
                  <a class="ant-dropdown-link" @click="(e) => e.preventDefault()">
                    <a-icon type="more" class="icon" />
                  </a>
                  <a-menu slot="overlay" @click="onClick($event, w)">
                    <a-menu-item key="1" style="width: 100px; text-align: center">删除</a-menu-item>
                  </a-menu>
                </a-dropdown>
              </div>
              <!--减2以修复每次移动无法完全将数据覆盖导致的视觉错误-->
              <component :is="w.componenturi" :rowcount="w.rowcount" :class="{ isiframe: isiframe }"/>
              <!-- <div class="resize-handle" @mousedown.prevent="resizeHeight(w)" @mouseover.prevent="displayButton(w)">
                <a-icon :class="[{'addButton':w.showButton}]" type="caret-up" />
                <a-icon :class="[{'reduceButton':w.showButton}]" type="caret-down" />
              </div> -->
            </a-card>
          </div>
          <!--右边非置顶项结束-->
        </draggable>
      </div>
    </div>
  </div>
</template>
<script>
import { Card, Icon, Dropdown, Menu } from "ant-design-vue";
import draggable from "vuedraggable";
import { showError } from "../../utils/index";
import { getLayout, getWidgets, updateLayout } from "../../api/menu";
import widgets from "../../widgets";

export default {
  components: {
    ACard: Card,
    AIcon: Icon,
    ADropdown: Dropdown,
    AMenu: Menu,
    AMenuItem: Menu.Item,
    ...widgets,
    draggable,
  },
  data() {
    return {
      layout: {
        weight: undefined,
        widgets: undefined,
      },
      topWidgets: [],
      leftWidgets: [],
      rightWidgets: [],
      leftTop: [], //左边单独置顶项
      rightTop: [], //右边单独置顶项
      upTop: [], //顶部置顶项
      draggable: false,
      isiframe: false,
    };
  },
  computed: {
    weightWidth() {
      if (this.layout.weight) {
        return Math.max(Math.min(this.layout.weight * 100, 70), 30);
      } else {
        return 50;
      }
    },
  },
  created() {
    this.loadLayout();
    // this.loadWidgets();
  },
  methods: {
    //获取首页需要展示的组件
    loadLayout() {
      getLayout()
        .then(({ result }) => {
          this.layout = result;
          this.rightWidgets = this.layout.widgets.filter(
            (item) => item.layout === 0
          );
          //寻找右侧置顶项
          this.rightWidgets.forEach((item, index) => {
            if (item.display === 2) {
              this.rightTop = [];
              this.rightTop.unshift(item);
              return;
            }
          });
          this.leftWidgets = this.layout.widgets.filter(
            (item) => item.layout === 1
          );
          //寻找左侧置顶项
          this.leftWidgets.forEach((item, index) => {
            if (item.display === 2) {
              this.leftTop = [];
              this.leftTop.unshift(item);
              return;
            }
          });
          this.topWidgets = this.layout.widgets.filter(
            (item) => item.layout === 2
          );
          //寻找顶部置顶项目
          this.topWidgets.forEach((item, index) => {
            if (item.display === 2) {
              this.upTop = [];
              this.upTop.unshift(item);
            }
          });
        })
        .catch((error) => {
          showError(error);
        });
    },
    topmoveEnd(evt) {
      // this.isiframe = true;//移动打开遮罩层
      // if (this.topWidgets.length < 2) {
      //   return false;
      // } else {
      //   if(evt.to.classList[0]==='dragRight'&&!this.rightWidgets.length){
      //     evt.draggedContext.element.layout = 0;
      //   }else if(evt.to.classList[0]==='dragLeft'&&!this.leftWidgets.length){
      //     evt.draggedContext.element.layout = 1;
      //   }else{
      //     evt.draggedContext.element.layout = evt.relatedContext.element.layout;
      //   }
      // }
      // return true;
    },
    leftmoveEnd(evt) {
      this.isiframe = true;//移动打开遮罩层
      if (this.leftWidgets.length < 2) {
        return false;
      } else {
        if(evt.to.classList[0]==='dragRight'&&!this.rightWidgets.length){
          evt.draggedContext.element.layout = 0;
        // }else if(evt.to.classList[0]==='dragTop'&&!this.topWidgets.length){
          // evt.draggedContext.element.layout = 2;
        }else{
          evt.draggedContext.element.layout = evt.relatedContext.element.layout;
        }
      }
      return true;
    },
    rightmoveEnd(evt) {
      this.isiframe = true;//移动打开遮罩层
      if (this.rightWidgets.length < 2) {
        return false;
      } else {
        if(evt.to.classList[0]==='dragLeft'&&!this.leftWidgets.length){
          evt.draggedContext.element.layout = 1;
        // }
        // else if(evt.to.classList[0]==='dragTop'&&!this.topWidgets.length){
          // evt.draggedContext.element.layout = 2;
        }else{
          evt.draggedContext.element.layout = evt.relatedContext.element.layout;
        }
      }
      return true;
    },
    displayButton(w){
      let that =this;
      that.$set(w,'showButton',true);
      document.onmouseout = function () {
        that.$delete(w,'showButton');
        document.onmousemove = null;
        document.onmouseout = null;
      };
    },
    // resizeHeight(w) {
    //   let that = this;
    //   let startY = event.y;
    //   let row = w.rowcount;
    //   document.onmousemove = function () {
    //     that.isiframe = true; //添加iframe遮罩层
    //     let moveY = event.y - startY;
    //     let rowchange = parseInt(moveY / 28); //鼠标坐标变化量
    //     console.log(moveY / 28)
    //     console.log(rowchange)
    //     console.log('s')
    //     w.rowcount = rowchange + row; //总行数等于总变化数+初始变化量
    //     if (w.id === 5 && w.rowcount < 4) {
    //       //常用业务
    //       w.rowcount = 4;
    //     } else if (w.id === 4 && w.rowcount < 9) {
    //       //工作图表
    //       w.rowcount = 9;
    //     } else if (w.id == 3 && w.rowcount < 1) {
    //       //人员机构查询
    //       w.rowcount = 1;
    //     } else if (w.id == 2 && w.rowcount < 1) {
    //       //我的待办
    //       w.rowcount = 1;
    //     } else if (w.id == 1 && w.rowcount < 1) {
    //       //文件中心
    //       w.rowcount = 1;
    //     }
    //   };
    //   document.onmouseup = function () {
    //     that.isiframe = false; //取消遮罩层
    //     document.onmousemove = null;
    //     document.onmouseup = null;
    //   };
    //   return false;
    // },
    drag() {
      let that = this;
      let startX = event.x;
      let sw = this.layout.weight; //获取左边区域占领比例
      document.onmousemove = function () {
        that.isiframe = true; //添加iframe遮罩层
        that.draggable = true; //禁用排序拖动
        let moveX = event.x - startX;
        //左边占比加上移动占比等于左边总占比
        that.layout.weight = Math.min(
          610,
          sw + moveX / document.documentElement.clientWidth
        );
      };
      document.onmouseup = function () {
        that.isiframe = false; //取消遮罩层
        that.draggable = false; //启用排序拖动
        document.onmousemove = null;
        document.onmouseup = null;
      };
      return false;
    },
    dragEnd(evt) {
      this.isiframe = false;//移动结束取消遮罩层
      this.layout.widgets = [...this.topWidgets,...this.leftWidgets,...this.rightWidgets,];
      this.layout.widgets.forEach((item, index) => {
        item.orderby = index + 1;
      });
      let data = this.layout;
      updateLayout(data)
        .then((res) => {})
        .catch((error) => {
          showError(error);
        });
    },
    //获取全部的组件
    // loadWidgets(){
    //   getWidgets().then(res=>{
    //   })
    // }
    onClick(event, w) {
      if (event.key == 1) {
        this.layout.widgets.splice(w.orderby - 1, 1);
        this.layout.widgets.forEach((item, index) => {
          item.orderby = index + 1;
        });
        let data = this.layout;
        updateLayout(data)
          .then((res) => {
            if (w.layout === 0) {
              this.rightTop = [];
            } else if (w.layout === 1) {
              this.leftTop = [];
            } else if (w.layout === 2) {
              this.upTop = [];
            }
            this.$message.success("删除成功");
            this.loadLayout();
          })
          .catch((error) => {
            showError(error);
          });
      }
    },
  },
};
</script>
<style lang="less" scoped>
.home-body {
  position: relative;
  padding: @layout-space-base;
  .widget {
    margin-bottom: 10px;
    .extra {
      .more {
        color: @text-color-secondary;
      }
      .ant-dropdown-link {
        .icon {
          padding-left: 10px;
          font-size: 18px;
          color: @text-color-secondary;
        }
      }
    }
  }
  .top {
    // position: relative;
    // width: 100%;
    // min-height: 50px;
  }
  .topEmpty{
    // position: absolute;
    // top: 0;
    // left: 0;
    // right: 0;
    // height: 20px;
  }
  .content {
    display: flex;
    // align-items: flex-start;
    .left {
      position: relative;
      width: 50%;
      padding-right: @layout-space-base / 2;
      & .move-handle {
        position: absolute;
        width: @layout-space-base;
        height: 100%;
        top: 0;
        right: -@layout-space-base / 2;
        z-index: 999;
      }
      & .move-handle:hover{
        cursor: w-resize;
      }
    }
    .right {
      position: relative;
      padding-left: @layout-space-base / 2;
      width: 50%;
    }
  }
  // .dragTop,
  .dragRight{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  .retain {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
  }
  // a-icon{
  //   background: #ffffff;
  //   border-radius: 5px;
  //   opacity: 0;
  //   cursor: pointer;
  //   position: absolute;
  //   left: 50%;
  //   transition: all .3s;
  //   transform: translateX(-50%);
  //   border: 1px solid rgb(0, 0, 0,0.2);
  //   z-index: 999;
   
  // }
  .addButton{
    background: #ffffff;
    border-radius: 5px;
    opacity: 0;
    cursor: pointer;
    position: absolute;
    left: 50%;
    transition: all .3s;
    transform: translateX(-50%);
    border: 1px solid rgb(0, 0, 0,0.2);
    z-index: 999;
  }
  .reduceButton{
    background: #ffffff;
    border-radius: 5px;
    opacity: 0;
    cursor: pointer;
    position: absolute;
    left: 50%;
    transition: all .3s;
    transform: translateX(-50%);
    border: 1px solid rgb(0, 0, 0,0.2);
    z-index: 999;
  }
  /deep/.ant-card-head {
    height: 41px;
    min-height: 41px;
  }
  /deep/.widget:not(.forbid):hover {
    cursor: move;
  }
  /deep/.container,
  .work,
  .search-center,
  .doc-enter,
  .my-state {
    transition: height 0.2s;
  }
  .isiframe::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 999;
  }
  .ghostClass {
    opacity: 0 !important;
  }
  .resize-handle {
    position: absolute;
    width: 100%;
    height: @layout-space-base;
    display: flex;
  }
  .resize-handle:hover{
    cursor: default;
  }
  .addButton,.reduceButton{
    // transform: translate(-50%,10%);
    opacity: 1;
  }
}
</style>
